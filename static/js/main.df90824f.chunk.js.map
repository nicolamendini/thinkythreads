{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["SCOPE","discoveryUrl","App","state","isLoggedIn","googleAuth","initClient","window","gapi","client","init","then","setState","auth2","getAuthInstance","isSignedIn","listen","updateSigninStatus","document","getElementById","addEventListener","signInFunction","signOutFunction","upload","e","console","log","signIn","signOut","setSigninStatus","user","currentUser","get","qc","hasGrantedScopes","location","reload","sessionStorage","setItem","handleClientLoad","load","boundary","delimiter","contentType","metadata","multipartRequestBody","JSON","stringify","request","execute","file","script","createElement","onload","this","src","body","appendChild","getItem","className","name","id","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"iNAEIA,EAAQ,6CACRC,EAAe,6DA4HJC,E,4MAxHbC,MAAQ,CACNC,WAAY,GACZC,WAAY,I,EAUdC,WAAa,WACX,IACEC,OAAOC,KAAKC,OAAOC,KAAK,CACpB,OAAU,0CACV,SAAY,2EACZ,MAASV,EACT,cAAiB,CAACC,KACjBU,MAAK,WACN,EAAKC,SAAS,CACZP,WAAYE,OAAOC,KAAKK,MAAMC,oBAEhC,EAAKX,MAAME,WAAWU,WAAWC,OAAO,EAAKC,oBAC9CC,SAASC,eAAe,cAAcC,iBAAiB,QAAS,EAAKC,gBACrEH,SAASC,eAAe,eAAeC,iBAAiB,QAAS,EAAKE,iBACtEJ,SAASC,eAAe,cAAcC,iBAAiB,QAAS,EAAKG,WAGzE,MAAMC,GACLC,QAAQC,IAAIF,K,EAIhBH,eAAgB,WACd,EAAKlB,MAAME,WAAWsB,SACtB,EAAKV,sB,EAGPK,gBAAiB,WACf,EAAKnB,MAAME,WAAWuB,UACtB,EAAKX,sB,EAGPA,mBAAqB,WACnB,EAAKY,mB,EAGPA,gBAAiB,WACf,IAAIC,EAAO,EAAK3B,MAAME,WAAW0B,YAAYC,MAC9B,MAAXF,EAAKG,GACP,EAAKrB,SAAS,CACZR,YAAY,IAIK0B,EAAKI,iBAAiBlC,KAEvC,EAAKY,SAAS,CACZR,YAAa,IAEfG,OAAO4B,SAASC,UAGpBC,eAAeC,QAAQ,cAAe,EAAKnC,MAAMC,a,EAGnDmC,iBAAmB,WACjBhC,OAAOC,KAAKgC,KAAK,eAAgB,EAAKlC,a,EAexCiB,OAAS,WACP,IAAMkB,EAAS,cACTC,EAAY,wBAIdC,EAAY,aACZC,EAAW,CACb,KAJW,YAKX,SAAYD,GAGVE,EACFH,EACA,wDACAI,KAAKC,UAAUH,GACfF,EACA,iBAJAA,iEAQAjB,QAAQC,IAAImB,GACEtC,OAAOC,KAAKC,OAAOuC,QAAQ,CACvC,KAAQ,mDACR,OAAU,OACV,OAAU,CAAC,WAAc,aACzB,QAAW,CACT,eAAgB,+BAAiCP,GAEnD,KAAQI,IACJI,SAAQ,SAASC,GACvBzB,QAAQC,IAAIwB,O,uDA9GhB,WACE,IAAIC,EAASjC,SAASkC,cAAc,UACpCD,EAAOE,OAAOC,KAAKf,iBACnBY,EAAOI,IAAI,oCACXrC,SAASsC,KAAKC,YAAYN,K,oBA+D5B,WAEE,OADA1B,QAAQC,IAAIW,eAAeqB,QAAQ,gBAEjC,sBAAKC,UAAU,MAAf,UACE,6CAAe,iCAAUL,KAAKnD,MAAMyD,UACpC,wBAAQC,GAAG,aAAX,qBACA,wBAAQA,GAAG,cAAX,sBACA,wBAAQA,GAAG,aAAX,2B,GA/EUC,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtD,MAAK,YAAkD,IAA/CuD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,EAAD,IACAtD,SAASC,eAAe,SAM1B4C,M","file":"static/js/main.df90824f.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nvar SCOPE = 'https://www.googleapis.com/auth/drive.file';\nvar discoveryUrl = 'https://www.googleapis.com/discovery/v1/apis/drive/v3/rest';\n\n\nclass App extends Component {\n  state = {\n    isLoggedIn: '',\n    googleAuth: ''\n  }\n  componentDidMount(){\n    var script = document.createElement('script');\n    script.onload=this.handleClientLoad;\n    script.src=\"https://apis.google.com/js/api.js\";\n    document.body.appendChild(script);\n  }\n\n\n  initClient = () => {\n    try{\n      window.gapi.client.init({\n          'apiKey': \"AIzaSyDmfaKWGbmsMVLYu1nu83egzWI30vgyD-0\",\n          'clientId': \"455375017729-n44ea0ohjt7hb6jpi5ks56ej89cppv93.apps.googleusercontent.com\",\n          'scope': SCOPE,\n          'discoveryDocs': [discoveryUrl]\n        }).then(() => {\n          this.setState({\n            googleAuth: window.gapi.auth2.getAuthInstance()\n          })\n          this.state.googleAuth.isSignedIn.listen(this.updateSigninStatus);\n         document.getElementById('signin-btn').addEventListener('click', this.signInFunction);\n         document.getElementById('signout-btn').addEventListener('click', this.signOutFunction);\n         document.getElementById('upload-btn').addEventListener('click', this.upload);\n\n      });\n    }catch(e){\n      console.log(e);\n    }\n  }\n\n  signInFunction =()=>{\n    this.state.googleAuth.signIn();\n    this.updateSigninStatus()\n  }\n\n  signOutFunction =()=>{\n    this.state.googleAuth.signOut();\n    this.updateSigninStatus()\n  }\n\n  updateSigninStatus = ()=> {\n    this.setSigninStatus();\n  }\n\n  setSigninStatus= ()=>{\n    var user = this.state.googleAuth.currentUser.get();\n    if (user.qc == null){\n      this.setState({\n        isLoggedIn: false\n      });\n    }\n    else{\n      var isAuthorized = user.hasGrantedScopes(SCOPE);\n      if(isAuthorized){\n        this.setState({\n          isLoggedIn : true\n        });\n        window.location.reload();\n      } \n    }\n    sessionStorage.setItem('userSession', this.state.isLoggedIn);\n  }\n\n  handleClientLoad = ()=>{\n    window.gapi.load('client:auth2', this.initClient);\n  }\n\n  render() {\n    console.log(sessionStorage.getItem('userSession'));\n    return (\n      <div className=\"App\">\n        <div>UserName: <strong>{ this.state.name}</strong></div>\n        <button id=\"signin-btn\">Sign In</button>\n        <button id=\"signout-btn\">Sign Out</button>\n        <button id=\"upload-btn\">Upload</button>\n      </div>\n    );\n  }\n\n  upload = () =>{\n    const boundary='foo_bar_baz'\n    const delimiter = \"\\r\\n--\" + boundary + \"\\r\\n\";\n    const close_delim = \"\\r\\n--\" + boundary + \"--\";\n    var fileName='mychat123';\n    var fileData='this is a sample data';\n    var contentType='text/plain'\n    var metadata = {\n      'name': fileName,\n      'mimeType': contentType\n    };\n\n    var multipartRequestBody =\n      delimiter +\n      'Content-Type: application/json; charset=UTF-8\\r\\n\\r\\n' +\n      JSON.stringify(metadata) +\n      delimiter +\n      'Content-Type: ' + contentType + '\\r\\n\\r\\n' +\n      fileData+'\\r\\n'+\n      close_delim;\n\n      console.log(multipartRequestBody);\n      var request = window.gapi.client.request({\n        'path': 'https://www.googleapis.com/upload/drive/v3/files',\n        'method': 'POST',\n        'params': {'uploadType': 'multipart'},\n        'headers': {\n          'Content-Type': 'multipart/related; boundary=' + boundary + ''\n        },\n        'body': multipartRequestBody});\n    request.execute(function(file) {\n      console.log(file)\n    });\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}