{"version":3,"sources":["components/Footer.js","components/Note.js","components/Wrapper.js","components/NotesList.js","components/SearchBar.js","components/SearchLabel.js","components/SearchArea.js","components/WorkspaceLabel.js","components/WorkspaceArea.js","components/LinksArea.js","components/NotesDragContext.js","components/NotesPage.js"],"names":["Footer","threadOrCollectionManage","threadOrCollection","setRootsOrBranches","rootsOrBranches","setDarkMode","mergeMode","setMergeMode","selectedNote","setCurrentPage","notesUpdating","loadedUser","synchNotes","darkMode","darkModeSwitch","window","localStorage","setItem","previousDarkMode","className","style","borderTop","backgroundColor","background","boxShadow","onClick","size","transform","previous","alert","mergeModeOn","type","color","height","width","driveNotConnected","Note","note","areaName","index","handleNotePress","openEditor","triggerRerender","draggableId","ui_id","provided","snapshot","id","name","ref","innerRef","draggableProps","dragHandleProps","onDoubleClick","backgroundImage","colorPreview","border","isDropAnimating","pinned","thread","length","collection","branches","roots","attachedImg","text","dangerouslySetInnerHTML","__html","preview","Wrapper","notesLength","draggableInfo","notes","isDropDisabled","sourceArea","undefined","find","droppableId","droppableProps","isDraggingOver","minWidth","placeholder","scrollTarget","beginning","align","dir","currentSlice","setCurrentSlice","prop","inline","focusPos","SLICESIZE","document","getElementById","scrollIntoView","sessionStorage","SHAREDMEX","currentSearchSlice","NotesList","handleAddNote","workspaceFlag","cleanFilters","setCleanFilters","retrievedSlice","getItem","useState","parseInt","isVisible","setIsVisible","tryFocusOnNote","slicedNotes","targetElement","useEffect","slice","scrollSucceded","usingScrollKeys","goClean","newCleanFilters","areSlicesScrolled","addButtonElement","visibility","direction","map","searchCleanerCheck","newSearchProps","threadFilter","collectionFilter","imgFilter","colorFilter","searchText","areFiltersOn","SearchBar","setSearchProps","searchProps","cleanSearch","paddingTop","onChange","event","target","value","toLowerCase","marginTop","margin","ColorPicker","setBackColor","setHasChanged","SearchLabel","closeCollection","dashboard","openedCollectionId","getCaption","get","SearchArea","addNote","selectNote","search","selectedNoteId","WorkspaceLabel","closeAndSave","openedWorkspaceId","workspaceIds","WorkspaceArea","workspace","LinksArea","links","editorModeSelection","prevSelectedNoteId","NoteDragContext","handleOnDragEnd","setDraggableInfo","onDragEnd","onDragStart","start","navigator","vibrate","source","sourceIndex","noteFound","NotesPage","GAPIloaded","currentUser","editorMode"],"mappings":"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","file":"static/js/9.e1d75207.chunk.js","sourcesContent":["/*\nAuthor: Nicola Mendini\nDate: 13/09/2021\nThinkyThreads Project\nEditorFooter component\nDefines the buttons of the footer and calls the respective functions\n*/\n\nimport { FcIdea, FcSettings, FcParallelTasks, FcBrokenLink, FcLink, FcImport, FcCheckmark, FcCancel} from 'react-icons/fc'\nimport { AiOutlineDisconnect, AiOutlineLink, AiOutlineImport, AiOutlineStop } from 'react-icons/ai';\nimport { GoLightBulb } from 'react-icons/go'\nimport { VscSettingsGear, VscCheck, VscSync } from 'react-icons/vsc';\nimport { IoIosGitBranch } from 'react-icons/io';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from \"react-loader-spinner\";\nimport { driveNotConnected, mergeModeOn } from '../helpers/Messages';\nimport React from 'react'\n\n// Footer component\n// takes the threadOrCollection state and a function to change it,\n// rootsOrBranches state and a function to chage it,\n// a function to switch the darkMode state\n// mergeMode state and a function to change it,\n// the selectedNote,\n// a function to change the current page, used to move to settings page,\n// the notesUpdating flag to show the animation\n// and the loadedUser flag to pass to the settings\n// Most of the props are used to show the correct icons and switch states\nconst Footer = ({\n    threadOrCollectionManage, \n    threadOrCollection, \n    setRootsOrBranches, \n    rootsOrBranches, \n    setDarkMode, \n    mergeMode, \n    setMergeMode,\n    selectedNote,\n    setCurrentPage,\n    notesUpdating,\n    loadedUser,\n    synchNotes,\n    darkMode\n}) => {\n\n    const darkModeSwitch = () =>{\n        window.localStorage.setItem('dark-mode', !darkMode)\n        setDarkMode((previousDarkMode) => !previousDarkMode)\n    }\n    return(\n        <div className='page-footer'\n            style={darkMode ? \n                {borderTop: '1px solid #2a2a2a', backgroundColor: '#1b1b1b'} \n                : \n                {borderTop: '#dddddd', background: 'linear-gradient(#eeeeee, white)', boxShadow: '0 0 3px #bbbbbb'}\n            }\n        >\n            {darkMode ?\n                <VscSettingsGear\n                    className='tools-btn'\n                    onClick={() => setCurrentPage('settings')}\n                    size='2.5em'\n                    style={{transform: 'scale(0.75)'}}\n                />\n                :\n                <FcSettings\n                    className='tools-btn'\n                    onClick={() => setCurrentPage('settings')}\n                    size='2.5em'\n                />\n            }\n\n            {!threadOrCollection ? (\n                darkMode ? \n                    <AiOutlineDisconnect\n                        onClick={() =>\n                            threadOrCollectionManage(\n                                !threadOrCollection\n                            )\n                        }\n                        size='2.5em'\n                        className='tools-btn'\n                        style={{transform: 'rotate(45deg) scale(0.85)'}}\n                    />\n                :\n                    <FcBrokenLink\n                        onClick={() =>\n                            threadOrCollectionManage(\n                                !threadOrCollection\n                            )\n                        }\n                        size='2.5em'\n                        className='tools-btn'\n                    />\n            )\n            :\n            (\n                darkMode ?\n                    <AiOutlineLink\n                        onClick={() =>\n                            threadOrCollectionManage(\n                                !threadOrCollection\n                            )\n                        }\n                        size='2.5em'\n                        className='tools-btn'\n                        style={{transform: 'rotate(45deg) scale(0.85)'}}\n                    />\n                :\n                    <FcLink\n                        onClick={() =>\n                            threadOrCollectionManage(\n                                !threadOrCollection\n                            )\n                        }\n                        size='2.5em'\n                        className='tools-btn'\n                    />\n                )\n            }\n            {\n                darkMode ?\n                    <IoIosGitBranch\n                        onClick={() =>\n                            setRootsOrBranches(\n                                (previous) => !previous\n                            )\n                        }\n                        size='2em'\n                        className='tools-btn'\n                        style={!rootsOrBranches && {transform: 'scaleY(-1)'}}\n                    />\n                :\n                    <FcParallelTasks\n                        onClick={() =>\n                            setRootsOrBranches(\n                                (previous) => !previous\n                            )\n                        }\n                        size='2.3em'\n                        className='tools-btn'\n                        style={rootsOrBranches ? {transform: 'scaleY(-1) rotate(90deg)'} : {transform: 'rotate(90deg)'}}\n                    />\n            }\n\n            {selectedNote ?\n                darkMode ?\n                    <AiOutlineImport\n                        onClick={() =>{\n                                setMergeMode(\n                                    (previous) => !previous\n                                )\n                                if(!mergeMode){\n                                    alert(mergeModeOn)\n                                }\n                            }\n                        }\n                        size='1.8em'\n                        className='tools-btn'\n                        style={{transform:'scaleX(1.1) rotate(-90deg)'}}\n                    /> \n                :\n                    <FcImport\n                        onClick={() =>{\n                                setMergeMode(\n                                    (previous) => !previous\n                                )\n                                if(!mergeMode){\n                                    alert(mergeModeOn)\n                                }\n                            }\n                        }\n                        size='2.3em'\n                        className='tools-btn'\n                        style={{transform:'scaleY(1.15) rotate(-90deg)'}}\n                    />    \n            : null}\n\n            {darkMode ?\n                <GoLightBulb\n                    onClick={() => darkModeSwitch()}\n                    size='2.5em'\n                    className='tools-btn'\n                    style={{transform: 'scaleY(0.7) scaleX(0.7)'}}\n                />  \n            :\n                <FcIdea\n                onClick={() => darkModeSwitch()}\n                size='2.5em'\n                className='tools-btn'\n                />  \n            }\n\n            {loadedUser ? (\n                notesUpdating>0?\n\n                    darkMode ? \n                        <VscSync \n                            size='2em'\n                        /> \n                    :\n                        <Loader \n                            type=\"Circles\" \n                            color=\"#00BFFF\" \n                            height='1.8em'\n                            width='2.3em'\n                        /> \n\n                :\n\n                    darkMode ? \n                        <VscCheck\n                            size='2em'\n                            className='tools-btn'\n                            onClick={()=>synchNotes()}\n                            style={{transform: 'scaleY(0.85)'}}\n                        />\n                    :\n                        <FcCheckmark\n                            size='2.3em'\n                            className='tools-btn'\n                            onClick={()=>synchNotes()}\n                        />\n            ) :\n\n            darkMode ?\n                <AiOutlineStop\n                    size='1.8em'\n                    onClick={()=>alert(driveNotConnected)}\n                    style={{transform: 'scaleX(-1)'}}\n                />\n            :\n                <FcCancel\n                    size='2.3em'\n                    onClick={()=>alert(driveNotConnected)}\n                />\n            }\n\n        </div>\n    );\n}\n\nexport default Footer;","/*\nAuthor: Nicola Mendini\nDate: 13/09/2021\nThinkyThreads Project\nNote component\nDefines the single note object and all the actions that are possible with it\n*/\n\nimport { Draggable } from 'react-beautiful-dnd';\nimport React from 'react';\nimport {RiPushpin2Fill} from 'react-icons/ri'\nimport { FaLink, FaFolder } from 'react-icons/fa'\nimport { ImTree } from 'react-icons/im'\nimport { FiPaperclip } from 'react-icons/fi'\n\n// Note component takes the note to show, \n// the name of the area it compares in,\n// the index of the note inside the sequence,\n// handleNotePress to select a note if it is pressed,\n// the darkMode, mergeMode, rootsOrBranches, threadOrCollection flags\n// the selectedNote,\n// the openEditor function to edit the note on double click\nconst Note = ({ \n\tnote, \n\tareaName, \n\tindex, \n\thandleNotePress, \n\tdarkMode, \n\tselectedNote,\n\tmergeMode,\n\topenEditor,\n\trootsOrBranches,\n\ttriggerRerender\n\n}) => {\n\n\treturn (\n\n\t\t\t<Draggable key={note.ui_id} draggableId={note.ui_id} index={index}>\n\t\t\t\t{(provided, snapshot) => (\n\t\t\t\t\t\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<li \n\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t(mergeMode && selectedNote.id===note.id && 'note no-scrollbar merge-mode')\n\t\t\t\t\t\t\t||\n\t\t\t\t\t\t\t(((darkMode && selectedNote && selectedNote.id===note.id) && \n\t\t\t\t\t\t\t\t'note note-dark no-scrollbar selected-note-dark') || \n\t\t\t\t\t\t\t((darkMode && (!selectedNote || selectedNote.id!==note.id)) && \n\t\t\t\t\t\t\t\t'note note-dark no-scrollbar') ||\n\t\t\t\t\t\t\t((!darkMode && selectedNote && selectedNote.id===note.id ) &&\n\t\t\t\t\t\t\t\t'note note-bright no-scrollbar selected-note') ||\n\t\t\t\t\t\t\t((!darkMode && (!selectedNote ||selectedNote.id!==note.id)) &&\n\t\t\t\t\t\t\t\t'note note-bright no-scrollbar')) \n\t\t\t\t\t\t}\n\t\t\t\t\t\tname={note.id}\n\t\t\t\t\t\tid={note.ui_id}\n\t\t\t\t\t\tref={provided.innerRef} \n\t\t\t\t\t\t{...provided.draggableProps}\n\t\t\t\t\t\t{...provided.dragHandleProps}\n\t\t\t\t\t\tonClick={()=> {handleNotePress(note)}}\n\t\t\t\t\t\tonDoubleClick={()=> openEditor(note)}\n\t\t\t\t\t\tstyle={ \n\t\t\t\t\t\t\t!(mergeMode && selectedNote.id===note.id) ? (\n\t\t\t\t\t\t\t\t!darkMode && note.color!=='#ffffff' ? \n\t\t\t\t\t\t\t\t\t(selectedNote && selectedNote.id===note.id ? \n\t\t\t\t\t\t\t\t\t\t{backgroundColor: note.color, ...provided.draggableProps.style} : \n\t\t\t\t\t\t\t\t\t{backgroundColor: note.color, border: '1px solid '+ note.color, ...provided.draggableProps.style}) : \n\t\t\t\t\t\t\t\t\t\t(note.color!=='#ffffff' ? \n\t\t\t\t\t\t\t\t\t\t\t{backgroundImage: 'linear-gradient(25deg, rgb(92, 92, 92) 92%, '+note.colorPreview + ' 92%)', ...provided.draggableProps.style} \n\t\t\t\t\t\t\t\t\t\t\t: provided.draggableProps.style))\n\t\t\t\t\t\t\t: provided.draggableProps.style\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{snapshot.isDropAnimating}\n\t\t\t\t\t\t\t{selectedNote && selectedNote.id===note.id && triggerRerender}\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t{note.pinned && areaName==='search-area' &&\n\t\t\t\t\t\t\t\t\t<RiPushpin2Fill size='10px' className='header-icon'/>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t{note.thread.length ?\n\t\t\t\t\t\t\t\t\t<FaLink size='10px' className='header-icon'/> : ''\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t{note.collection.length ?\n\t\t\t\t\t\t\t\t\t<FaFolder size='10px' className='header-icon'/> : ''\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t{!rootsOrBranches && note.branches.length ?\n\t\t\t\t\t\t\t\t\t<ImTree size='10px' className='header-icon'/> : ''\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t{rootsOrBranches && note.roots.length ?\n\t\t\t\t\t\t\t\t\t<ImTree size='10px' className='header-icon' style={{transform: 'scaleY(-1)'}}\t/> : ''\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t{note.attachedImg && !note.attachedImg[2] ?\n\t\t\t\t\t\t\t\t\t<FiPaperclip size='10px' className='header-icon' style={{transform:'rotate(-45deg)'}}/> : ''\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{(!note.attachedImg || !note.attachedImg[2]) ?\n\t\t\t\t\t\t\t\t<div className='note-content no-scrollbar' dangerouslySetInnerHTML={{__html: note.preview}}></div> : \n\t\t\t\t\t\t\t\t<div className='just-background-note' style={{backgroundImage: 'url('+ note.text +')'}}></div>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</Draggable>\n\t);\n};\n\nexport default Note;\n","/*\nAuthor: Nicola Mendini\nDate: 13/09/2021\nThinkyThreads Project\nWrapper component\nUsed to wrap an unsaved thread inside an empty note\nor to expand the thread or collection contained in any\narbitrary note\n*/\n\nimport {Droppable} from 'react-beautiful-dnd';\nimport React from 'react'\n\nconst Wrapper = ({\n\tthreadOrCollection,\n    notesLength,\n    draggableInfo,\n    notes,\n    darkMode\n}) => {\n\n    // Disable dropping here unless the note comes from the search area\n    // and it is empty if you are trying to wrap an unsaved thread/collection\n    // or it is full if you are trying to expand it to show its content\n    const isDropDisabled = \n        draggableInfo.sourceArea!=='search-area' ||\n        (\n            notesLength>0 ? (\n\n                draggableInfo.note.thread.length>0 || \n                draggableInfo.note.collection.length>0\n            )\n            :\n            (\n                !draggableInfo.note.thread.length && \n                !draggableInfo.note.collection.length \n            )\n            \n        ) ||\n        (notes.find(note => note.id===draggableInfo.note.id)!==undefined)\n    \n    return (\n\n        <Droppable \n            droppableId='wrapper-area'\n            isDropDisabled={isDropDisabled}\n        >\n\n            {(provided, snapshot) => (\n                <div \n                    className='wrapper'\n                    {...provided.droppableProps} \n                    ref={provided.innerRef} \n                    style={ \n                        notesLength > 0 ? (\n                            {\n                            ...(\n                                darkMode ?\n                                    threadOrCollection ? {backgroundColor:'#fccb00', color:'black'} \n                                    : {backgroundColor:'#1273de', color:'white'}\n                                :\n                                    threadOrCollection ? {backgroundColor:'#fef3bd', color:'black'} \n                                    : {backgroundColor:'#c4def6', color:'black'}\n                            ), \n                            ...(!snapshot.isDraggingOver && {minWidth:\"8vh\"})\n                            })\n                        : \n                        darkMode ?\n                        {backgroundColor: '#2e2e2e', minWidth:\"8vh\", color: '#666666'}\n                        :\n                        {backgroundColor: '#f4f4f4', minWidth:\"8vh\", boxShadow: '1px 0px 1px #dddddd'}\n                    }\n                >\n\n                <div className='vertical-text'>{notesLength>0 ? 'WRAP' : 'drop to expand'}</div>\n\n                {provided.placeholder}\n\n                {\n                    snapshot.isDraggingOver?\n                    \n                        (notesLength > 0 ?\n                            (\n                                <div className='vertical-text'>\n                                    wrap <br></br> \n                                    {threadOrCollection ? ' thread ' : ' collection '}\n                                    <br></br> \n                                    inside note\n                                </div>\n                            ) \n                        :\n                            (\n                                <div className='vertical-text'>\n                                    expand\n                                    <br></br> \n                                    {draggableInfo.note.thread.length ? \n                                        'thread' : 'collection'\n                                    }\n                                </div>\n                            ) \n                        ) : null\n                }\n\n                </div>\n\n            )}\n\n        </Droppable>\n\n    )\n}\nexport default Wrapper","/*\nAuthor: Nicola Mendini\nDate: 13/09/2021\nThinkyThreads Project\nNotesList component\nDefines a general list of notes that acts as a Droppable\nin the framework of React Beautiful Dnd\n*/\n\nimport Note from './Note';\nimport {Droppable} from 'react-beautiful-dnd';\nimport { useEffect, useState } from 'react';\nimport {FcNext, FcPrevious, FcPlus} from 'react-icons/fc';\nimport { BsChevronRight, BsChevronLeft } from 'react-icons/bs';\nimport { BsPlusSquare } from 'react-icons/bs'\nimport Wrapper from './Wrapper';\nimport React from 'react'\nimport { SHAREDMEX, SLICESIZE } from './Dashboard';\n\n// Max size of a row of notes, it is necessary to press the arrow\n// button to access further notes\nexport const scrollTarget = {beginning: false}\n// Function used to change slice based on which arrow button has been pressed\nconst align = (dir, currentSlice, setCurrentSlice, notes, areaName) => {\n\n\t// Before changing slice, set up the autoscroll\n\t// Initialise a prop based on whether the button was next or prev\n\tconst prop = dir===-1 ? {inline:'start'} : {inline:'end'}\n\tvar focusPos = currentSlice*SLICESIZE+SLICESIZE-1\n\n\t// If overflows, go back to last note of the sequence\n\tif(focusPos>notes.length-1){\n\t\tfocusPos=notes.length-1\n\t}\n\n\t// scroll into the last note of the previous slice to give the idea of continuity \n\t// between slices\n\tdocument.getElementById(notes[focusPos].ui_id).scrollIntoView(prop);\n\tsetCurrentSlice(currentSlice+dir)\n\twindow.sessionStorage.setItem('current-slice-'+areaName, currentSlice+dir)\n\tif(areaName==='search-area'){\n\t\tSHAREDMEX.currentSearchSlice = currentSlice+dir\n\t}\n}\n\nconst NotesList = ({\n\tnotes,\n\thandleAddNote,\n\tareaName,\n\thandleNotePress,\n\tdarkMode,\n\tselectedNote,\n\tmergeMode,\n\tthreadOrCollection,\n\topenEditor,\n\tworkspaceFlag, \n\trootsOrBranches,\n\tisDropDisabled,\n\tdraggableInfo,\n\tcleanFilters,\n\tsetCleanFilters,\n\ttriggerRerender\n}) => {\n\n\tconst retrievedSlice = window.sessionStorage.getItem('current-slice-'+areaName)\n\t// State that defines the slice the user is at\n\tconst [currentSlice, setCurrentSlice] = useState(\n\t\tretrievedSlice ? \n\t\tparseInt(retrievedSlice) :\n\t\t0\n\t)\n\t// State to hide the NotesList until the scroll is performed, used to avoid flickering\n\tconst [isVisible, setIsVisible] = useState(false)\n\n\tconst tryFocusOnNote = (slicedNotes) => {\n\t\t// If there is a selectedNote to scroll to, do it\n\t\tif(selectedNote){\n\t\t\tconst focusPos = slicedNotes.find(note => note.id === selectedNote.id)\n\t\t\tif(focusPos){\n\t\t\t\tconst targetElement = document.getElementById(focusPos.ui_id)\n\t\t\t\tif(targetElement){\n\t\t\t\t\ttargetElement.scrollIntoView({inline: 'center'})\n\t\t\t\t\treturn true\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Effect to set back the scroll once exiting the editor\n\tuseEffect(() => {\n\t\tconst slicedNotes = notes.slice(currentSlice*SLICESIZE, (currentSlice+1)*SLICESIZE+SLICESIZE)\n\t\tvar scrollSucceded = tryFocusOnNote(slicedNotes)\n\n\t\t// Otherwise, if some search is performed but there are no notes in the current slices, go to slice 0\n\t\tif(!slicedNotes.length && currentSlice!==0 && !scrollSucceded){\n\t\t\tsetCurrentSlice(0)\n\t\t\twindow.sessionStorage.setItem('current-slice-'+areaName, 0)\n\t\t\tif(areaName === 'search-area'){\n\t\t\t\tSHAREDMEX.currentSearchSlice = 0\n\t\t\t}\n\t\t}\n\t\tsetIsVisible(true)\n\t// eslint-disable-next-line\n\t}, [notes])\n\n\tuseEffect(() => {\n\t\tif(SHAREDMEX.usingScrollKeys){\n\t\t\tconst slicedNotes = notes.slice(currentSlice*SLICESIZE, (currentSlice+1)*SLICESIZE+SLICESIZE)\n\t\t\ttryFocusOnNote(slicedNotes)\n\t\t\tSHAREDMEX.usingScrollKeys = false\n\t\t\tsetIsVisible(true)\n\t\t}\n\t// eslint-disable-next-line\n\t},[selectedNote])\n\n\tuseEffect(() => {\n\t\tif(areaName==='search-area' && cleanFilters.goClean && currentSlice > 0){\n\t\t\tsetCurrentSlice(0)\n\t\t\twindow.sessionStorage.setItem('current-slice-'+areaName, 0)\n\t\t\tSHAREDMEX.currentSearchSlice = 0\n\t\t}\n\t// eslint-disable-next-line\n\t}, [cleanFilters])\n\n\tuseEffect(() => {\n\t\tif(areaName==='search-area'){\n\t\t\tconst newCleanFilters = {...cleanFilters}\n\t\t\tif(currentSlice > 0){\n\t\t\t\tnewCleanFilters.areSlicesScrolled = true\n\t\t\t}\n\t\t\telse{\n\t\t\t\tnewCleanFilters.areSlicesScrolled = false\n\t\t\t}\n\t\t\tif(scrollTarget.beginning){\n\t\t\t\tconst addButtonElement = document.getElementById('plus')\n\t\t\t\tif(addButtonElement){\n\t\t\t\t\taddButtonElement.scrollIntoView()\n\t\t\t\t}\n\t\t\t\tscrollTarget.beginning = false\n\t\t\t}\n\t\t\tsetCleanFilters(newCleanFilters)\n\t\t}\n\t// eslint-disable-next-line\n\t}, [currentSlice])\n\n\tconst slicedNotes = notes.slice(currentSlice*SLICESIZE, (currentSlice+1)*SLICESIZE+SLICESIZE)\n\n\treturn (\n\n\t\t<div style={{visibility: isVisible ? 'visible' : 'hidden'}}>\n\n\t\t\t<Droppable \n\t\t\t\tdroppableId={areaName} \n\t\t\t\tdirection='horizontal' \n\t\t\t\tclassName='droppable-wrapper' \n\t\t\t\tisDropDisabled={isDropDisabled}\n\t\t\t>\n\n\t\t\t\t{(provided) => (\n\n\t\t\t\t\t<ul \n\t\t\t\t\t\tclassName='notes-list' \n\t\t\t\t\t\t{...provided.droppableProps} \n\t\t\t\t\t\tref={provided.innerRef} \n\t\t\t\t\t\tid={areaName}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t{currentSlice>0 ?\n\t\t\t\t\t\t\t\t\tdarkMode ?\n\t\t\t\t\t\t\t\t\t\t<BsChevronLeft \n\t\t\t\t\t\t\t\t\t\t\tclassName='tools-btn arrow-btn'\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => align(-1, currentSlice, setCurrentSlice, notes, areaName)}\n\t\t\t\t\t\t\t\t\t\t\tsize='2em'\n\t\t\t\t\t\t\t\t\t\t\tcolor='#666666'\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t\t<FcPrevious \n\t\t\t\t\t\t\t\t\t\t\tclassName='tools-btn arrow-btn'\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => align(-1, currentSlice, setCurrentSlice, notes, areaName)}\n\t\t\t\t\t\t\t\t\t\t\tsize='2em'\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t: null}\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t{(areaName==='workspace-area' && workspaceFlag) &&\n\n\t\t\t\t\t\t\t\t<Wrapper \n\t\t\t\t\t\t\t\t\tthreadOrCollection={threadOrCollection}\n\t\t\t\t\t\t\t\t\tnotesLength={notes.length}\n\t\t\t\t\t\t\t\t\tdraggableInfo={draggableInfo}\n\t\t\t\t\t\t\t\t\tnotes={notes}\n\t\t\t\t\t\t\t\t\tdarkMode={darkMode}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t{(areaName==='search-area' && currentSlice===0) &&\n\t\t\t\t\t\t\t\t\t(darkMode ?\n\t\t\t\t\t\t\t\t\t<BsPlusSquare \n\t\t\t\t\t\t\t\t\t\tclassName='tools-btn arrow-btn add-btn'\n\t\t\t\t\t\t\t\t\t\tonClick={() => handleAddNote()}\n\t\t\t\t\t\t\t\t\t\tsize='2.25em'\n\t\t\t\t\t\t\t\t\t\tcolor='#555555'\n\t\t\t\t\t\t\t\t\t\tstyle={{transform: 'scale(0.8)'}}\n\t\t\t\t\t\t\t\t\t\tid='plus'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t<FcPlus\n\t\t\t\t\t\t\t\t\t\tclassName='tools-btn arrow-btn add-btn'\n\t\t\t\t\t\t\t\t\t\tonClick={() => handleAddNote()}\n\t\t\t\t\t\t\t\t\t\tsize='2.25em'\n\t\t\t\t\t\t\t\t\t\tid='plus'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t{slicedNotes.map((note, index) => (\n\n\t\t\t\t\t\t\t\t<Note\n\t\t\t\t\t\t\t\t\tkey={note.ui_id}\n\t\t\t\t\t\t\t\t\tnote={note}\n\t\t\t\t\t\t\t\t\tareaName={areaName}\n\t\t\t\t\t\t\t\t\tindex={index+currentSlice*SLICESIZE}\n\t\t\t\t\t\t\t\t\thandleNotePress={handleNotePress}\n\t\t\t\t\t\t\t\t\tdarkMode={darkMode}\n\t\t\t\t\t\t\t\t\tselectedNote={selectedNote}\n\t\t\t\t\t\t\t\t\tmergeMode={mergeMode}\n\t\t\t\t\t\t\t\t\topenEditor={openEditor}\n\t\t\t\t\t\t\t\t\trootsOrBranches={rootsOrBranches}\n\t\t\t\t\t\t\t\t\ttriggerRerender={triggerRerender}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t))}\n\n\t\t\t\t\t\t\t{provided.placeholder}\n\n\t\t\t\t\t\t\t<div> \n\t\t\t\t\t\t\t\t{(currentSlice+1)*SLICESIZE+SLICESIZE<notes.length ? \n\n\t\t\t\t\t\t\t\t\tdarkMode ?\n\t\t\t\t\t\t\t\t\t\t<BsChevronRight \n\t\t\t\t\t\t\t\t\t\t\tclassName='tools-btn arrow-btn'\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => align(1, currentSlice, setCurrentSlice, notes, areaName)}\n\t\t\t\t\t\t\t\t\t\t\tsize='2em'\n\t\t\t\t\t\t\t\t\t\t\tcolor='#666666'\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t\t<FcNext \n\t\t\t\t\t\t\t\t\t\t\tclassName='tools-btn arrow-btn'\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => align(1, currentSlice, setCurrentSlice, notes, areaName)}\n\t\t\t\t\t\t\t\t\t\t\tsize='2em'\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t: null}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t</ul>\n\t\t\t\t)}\n\n\t\t\t</Droppable>\n\t\t</div>\n\t);\n};\n\nexport default NotesList;\n","/*\nAuthor: Nicola Mendini\nDate: 13/09/2021\nThinkyThreads Project\nSearchBar component\n*/\n\nimport React, { useEffect } from 'react'\nimport { Droppable } from 'react-beautiful-dnd'\nimport { FcSearch } from 'react-icons/fc'\nimport { BiSearchAlt } from 'react-icons/bi'\nimport ColorPicker from './ColorPicker'\nimport { BsPaperclip } from 'react-icons/bs'\nimport { VscChromeClose } from 'react-icons/vsc'\nimport { scrollTarget } from './NotesList'\n\nconst searchCleanerCheck = (newSearchProps, cleanFilters, setCleanFilters) => {\n\tconst newCleanFilters = {...cleanFilters}\n\tif(\n\t\tnewSearchProps.threadFilter ||\n\t\tnewSearchProps.collectionFilter || \n\t\tnewSearchProps.imgFilter ||\n\t\tnewSearchProps.colorFilter!=='#ededed' ||\n\t\tnewSearchProps.searchText\n\t){\n\t\tnewCleanFilters.areFiltersOn = true\n\t}\n\telse{\n\t\tnewCleanFilters.areFiltersOn = false\n\t}\n\tsetCleanFilters(newCleanFilters)\n}\n\nconst cleanSearch = (cleanFilters, setCleanFilters, setSearchProps) => {\n\tconst newCleanFilters = {...cleanFilters}\n\tnewCleanFilters.goClean = true\n\tnewCleanFilters.areFiltersOn = false\n\tconst newSearchProps = {\n\t\tsearchText:'', \n\t\tthreadFilter: false, \n\t\tcollectionFilter: false,\n\t\tcolorFilter: '#ededed',\n\t\timgFilter: false\n\t}\n\tscrollTarget.beginning = true\n\tsetCleanFilters(newCleanFilters)\n\tsetSearchProps(newSearchProps)\n}\n\nconst SearchBar = ({ \n\tsetSearchProps, \n\tsearchProps ,\n\tisDropDisabled,\n\tdarkMode,\n\tcleanFilters,\n\tsetCleanFilters\n}) => {\t\n\n\tuseEffect(() => {\n\t\tif(cleanFilters.goClean){\n\t\t\tconst newCleanFilters = {...cleanFilters}\n\t\t\tnewCleanFilters.goClean = false\n\t\t\tsetCleanFilters(newCleanFilters)\n\t\t}\n\t// eslint-disable-next-line\n\t}, [cleanFilters])\n\n\treturn (\n\n\t\t<Droppable \n\t\t\tdroppableId={'search-bar'}\n\t\t\tisDropDisabled={isDropDisabled}\n\t\t>\n\t\t\t{(provided, snapshot) => (\n                <div \n                    className={darkMode ? 'search-dark' : 'search-bright'}\n                    {...provided.droppableProps} \n                    ref={provided.innerRef} \n\t\t\t\t>\n\n\t\t\t\t\t{\t\t\n\t\t\t\t\tcleanFilters.areSlicesScrolled || cleanFilters.areFiltersOn ?\n\t\t\t\t\t\n\t\t\t\t\t\t<VscChromeClose \n\t\t\t\t\t\tsize='1.6em'\n\t\t\t\t\t\tclassName='tools-btn search-icons'\n\t\t\t\t\t\tonClick={() => cleanSearch(cleanFilters, setCleanFilters, setSearchProps)}\n\t\t\t\t\t\tcolor={darkMode ? '#666666' : '#464646'}\n\t\t\t\t\t\tstyle={{paddingTop: '3px', transform:'scale(0.8)'}}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t:\n\n\t\t\t\t\t\tdarkMode ?\n\t\t\t\t\t\t\t<BiSearchAlt className='search-icons' size='2em' />\n\t\t\t\t\t\t:\n\t\t\t\t\t\t\t<FcSearch className='search-icons' size='2em' />\n\t\t\t\t\t}\n\t\t\t\t\t{provided.placeholder}\n\n\t\t\t\t\t<input\n\t\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\t\tconst newSearchProps = {...searchProps}\n\t\t\t\t\t\t\tnewSearchProps.searchText = event.target.value.toLowerCase()\n\t\t\t\t\t\t\tsearchCleanerCheck(newSearchProps, cleanFilters, setCleanFilters)\n\t\t\t\t\t\t\tsetSearchProps(newSearchProps)\n\t\t\t\t\t\t}}\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tplaceholder={\n\t\t\t\t\t\t\tsnapshot.isDraggingOver ?\n\t\t\t\t\t\t\t\t'Work within this collection'\n\t\t\t\t\t\t\t: \n\t\t\t\t\t\t\t\t'Type to search'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\tvalue={searchProps.searchText}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<span \n\t\t\t\t\t\tclassName='search-filter tools-btn' \n\t\t\t\t\t\tstyle={searchProps.imgFilter ?  {color:'red'} : {}}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tconst newSearchProps = {...searchProps}\n\t\t\t\t\t\t\tnewSearchProps.imgFilter = !newSearchProps.imgFilter\n\t\t\t\t\t\t\tsearchCleanerCheck(newSearchProps, cleanFilters, setCleanFilters)\n\t\t\t\t\t\t\tsetSearchProps(newSearchProps)\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<BsPaperclip \n\t\t\t\t\t\t\tsize='0.9em' \n\t\t\t\t\t\t\tstyle={{marginTop: '4px', transform: 'rotate(180deg)'}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</span>\n\n\t\t\t\t\t<span \n\t\t\t\t\t\tclassName='search-filter tools-btn' \n\t\t\t\t\t\tstyle={searchProps.threadFilter ?  {color:'red'} : {}}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tconst newSearchProps = {...searchProps}\n\t\t\t\t\t\t\tnewSearchProps.threadFilter = !newSearchProps.threadFilter\n\t\t\t\t\t\t\tsearchCleanerCheck(newSearchProps, cleanFilters, setCleanFilters)\n\t\t\t\t\t\t\tsetSearchProps(newSearchProps)\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tT\n\t\t\t\t\t</span>\n\n\t\t\t\t\t<span \n\t\t\t\t\t\tclassName='search-filter tools-btn'\n\t\t\t\t\t\tstyle={searchProps.collectionFilter ? {color:'red'} : {}}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tconst newSearchProps = {...searchProps}\n\t\t\t\t\t\t\tnewSearchProps.collectionFilter = !newSearchProps.collectionFilter\n\t\t\t\t\t\t\tsearchCleanerCheck(newSearchProps, cleanFilters, setCleanFilters)\n\t\t\t\t\t\t\tsetSearchProps(newSearchProps)\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tC\n\t\t\t\t\t</span>\n\n\t\t\t\t\t<span style={{margin: '0 5px 0 0'}}>\n\t\t\t\t\t\t<ColorPicker \n\t\t\t\t\t\t\tsetBackColor={{}}\n\t\t\t\t\t\t\tsetHasChanged={{}}\n\t\t\t\t\t\t\tsearchProps={searchProps}\n\t\t\t\t\t\t\tsetSearchProps={setSearchProps}\n\t\t\t\t\t\t\tsearchCleanerCheck={\n\t\t\t\t\t\t\t\t(newSearchProps) => \n\t\t\t\t\t\t\t\tsearchCleanerCheck(newSearchProps, cleanFilters, setCleanFilters)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</span>\n\n\t\t\t\t</div>\n\t\t\t)}\n\n\t\t</Droppable>\n\t);\n};\n\nexport default SearchBar;\n","/*\nAuthor: Nicola Mendini\nDate: 13/09/2021\nThinkyThreads Project\nSearchLabel component\nGives information about the current state of the search\nand the filters applied to it\n*/\n\nimport React from 'react';\nimport { getCaption } from '../helpers/DashboardUtils';\nimport { VscChromeClose } from 'react-icons/vsc';\n\nconst SearchLabel = ({ \n    searchProps, \n    closeCollection, \n    dashboard,\n    darkMode\n}) => {\n\n    return(\n        <div className='stripe-label'>\n\n            <div className='stripe-not-overflow' style={{width: '80vw'}}>\n                NOTE FINDER  \n                {searchProps.threadFilter && ' - THREADS'} \n                {searchProps.collectionFilter && ' - COLLECTIONS'}\n                {\n                    dashboard.openedCollectionId && ' : ' + \n                    getCaption(dashboard.notes.get(dashboard.openedCollectionId))\n                }\n            </div>\n\n            {dashboard.openedCollectionId && \n                <div>\n                    <VscChromeClose \n                        size='2em'\n                        className='tools-btn close-btn'\n                        onClick={() => closeCollection()}\n                        color={darkMode ? 'white' : 'black'}\n                    />\n                </div>\n            }\n\n        </div>\n    )\n}\n\nexport default SearchLabel","/*\nAuthor: Nicola Mendini\nDate: 13/09/2021\nThinkyThreads Project\nSearchArea component\nSearch Area that includes the searchBar, the Search Label\nand the notes list containing the results of the search\n*/\n\nimport React, { useState } from 'react';\nimport SearchBar from './SearchBar';\nimport SearchLabel from './SearchLabel';\nimport NotesList from './NotesList';\n\nexport var searchState = {searchEmpty:true, firstSlice:true}\n\nconst SearchArea = ({ \n    closeCollection, \n    dashboard, \n    darkMode, \n    addNote, \n    selectNote, \n    mergeMode, \n    threadOrCollection, \n    openEditor, \n    rootsOrBranches,\n    searchProps,\n    setSearchProps,\n    draggableInfo,\n    triggerRerender\n}) => {\n\n    // Dropping here is disabled unless the note comes from the \n    // search area itself and has a collection within it\n    // The gesture is used to expand it\n    const isDropDisabled = \n        draggableInfo.sourceArea!=='search-area' ||\n        !draggableInfo.note.collection.length\n\n    const [cleanFilters, setCleanFilters] = useState({areSlicesScrolled: false, areFiltersOn: false, goClean: false})\n\n    return(\n        <div>\n            <SearchBar \n                setSearchProps={setSearchProps} \n                searchProps={searchProps}\n                isDropDisabled={isDropDisabled}\n                darkMode={darkMode}\n                cleanFilters={cleanFilters}\n                setCleanFilters={setCleanFilters}\n            />\n\n            <div>\n                <SearchLabel \n                    searchProps={searchProps} \n                    closeCollection={closeCollection}\n                    dashboard={dashboard}\n                    darkMode={darkMode}\n                />\n                \n                <NotesList\n                    notes={dashboard.search}\n                    handleAddNote={addNote}\n                    areaName={'search-area'}\n                    handleNotePress={selectNote}\n                    darkMode={darkMode}\n                    selectedNote={dashboard.notes.get(dashboard.selectedNoteId)}\n                    mergeMode={mergeMode}\n                    threadOrCollection={threadOrCollection}\n                    openEditor={openEditor}\n                    rootsOrBranches={rootsOrBranches}\n                    cleanFilters={cleanFilters}\n                    setCleanFilters={setCleanFilters}\n                    triggerRerender={triggerRerender}\n                />\n            </div> \n        </div>\n    )\n}\n\nexport default SearchArea","/*\nAuthor: Nicola Mendini\nDate: 13/09/2021\nThinkyThreads Project\nWorkspaceLabel component\nGives information about the current state of the workspace\n*/\n\nimport React from 'react';\nimport { getCaption } from '../helpers/DashboardUtils';\nimport { VscChromeClose } from 'react-icons/vsc';\n\nconst WorkspaceLabel = ({ \n    dashboard,\n    threadOrCollection,\n    closeAndSave,\n    darkMode\n}) => {\n\nreturn(\n    <div className='stripe-label'>\n\n        <div className='stripe-not-overflow' style={{width: '80vw'}}>\n\n            CURRENT {threadOrCollection ? ' THREAD ' : ' COLLECTION '} \n            {dashboard.openedWorkspaceId ?\n                    ' : ' + getCaption(dashboard.notes.get(dashboard.openedWorkspaceId))\n                : (dashboard.workspaceIds.length ? \n                    (threadOrCollection ? ' : unsaved thread ' : ' : unsaved collection ') \n            : null)\n            }\n        </div>\n\n        {dashboard.workspaceIds.length || dashboard.openedWorkspaceId ?\n            <div>\n                <VscChromeClose \n                    size='2em'\n                    className='tools-btn close-btn'\n                    onClick={() => closeAndSave()}\n                    color={darkMode ? 'white' : 'black'}\n                />\n            </div>\n        : null}\n\n    </div>\n    )\n}\n\nexport default WorkspaceLabel","/*\nAuthor: Nicola Mendini\nDate: 13/09/2021\nThinkyThreads Project\nWorkspaceArea component\nContains the current workspace the user is working on\n*/\n\nimport React from 'react';\nimport NotesList from './NotesList';\nimport WorkspaceLabel from './WorkspaceLabel';\n\nconst WorkspaceArea = ({ \n    dashboard, \n    darkMode, \n    selectNote, \n    mergeMode, \n    threadOrCollection, \n    openEditor, \n    rootsOrBranches,\n    closeAndSave,\n    draggableInfo,\n    triggerRerender\n}) => { \n\n    return (\n        <div>\n\n            <WorkspaceLabel \n                dashboard={dashboard}\n                threadOrCollection={threadOrCollection}\n                closeAndSave={closeAndSave}\n                darkMode={darkMode}\n            />                \n\n            <NotesList\n                notes={dashboard.workspace}\n                areaName={'workspace-area'}\n                handleNotePress={selectNote}\n                darkMode={darkMode}\n                selectedNote={dashboard.notes.get(dashboard.selectedNoteId)}\n                mergeMode={mergeMode}\n                threadOrCollection={threadOrCollection}\n                openEditor={openEditor}\n                workspaceFlag={!dashboard.openedWorkspaceId}\n                rootsOrBranches={rootsOrBranches}\n                draggableInfo={draggableInfo}\n                triggerRerender={triggerRerender}\n            />\n\n        </div>\n    )\n}\n\nexport default WorkspaceArea","/*\nAuthor: Nicola Mendini\nDate: 13/09/2021\nThinkyThreads Project\nLinksArea component\nDefines the lowest row of notes of the dashboard\nwhich shows the links starting from/coming into the selectedNote\nBased of a rootsOrBranches flag\n*/\n\nimport React from 'react';\nimport NotesList from './NotesList';\nimport { getCaption } from '../helpers/DashboardUtils';\nimport { SHAREDMEX } from './Dashboard';\n\n// LinksArea component,\n// takes the dashboard to get the notes from,\n// The darkmode flag\n// some draggableInfo to know where the drags start from\nconst LinksArea = ({ \n    dashboard, \n    darkMode, \n    mergeMode, \n    threadOrCollection, \n    openEditor, \n    rootsOrBranches,\n    draggableInfo,\n    triggerRerender\n}) => { \n\n    const isDropDisabled = \n        draggableInfo.sourceArea==='workspace-area' ||\n        (draggableInfo.note && draggableInfo.note.id===dashboard.selectedNoteId)\n\n    const openEditorForLinks = (note) => {\n        if(!mergeMode){\n            SHAREDMEX.editorModeSelection = 'prev'\n            dashboard.prevSelectedNoteId = dashboard.selectedNoteId\n            dashboard.selectedNoteId = note.id\n            openEditor()\n        }\n    }\n\n    return (\n        <div>\n\n            <label className='stripe-label stripe-not-overflow' style={{width: '90vw'}}>\n                {!rootsOrBranches ? ' BRANCHES' : ' ROOTS'}\n                {dashboard.selectedNoteId && ' - ' + getCaption(dashboard.notes.get(dashboard.selectedNoteId))} \n            </label>\n\n            <NotesList\n                notes={dashboard.links}\n                areaName={'branches-area'}\n                darkMode={darkMode}\n                handleNotePress={() => {}}\n                selectedNote={dashboard.notes.get(dashboard.selectedNoteId)}\n                mergeMode={mergeMode}\n                threadOrCollection={threadOrCollection}\n                openEditor={openEditorForLinks}\n                rootsOrBranches={rootsOrBranches}\n                isDropDisabled={isDropDisabled}\n                triggerRerender={triggerRerender}\n            />\n\n        </div>\n    )\n}\n\nexport default LinksArea","/*\nAuthor: Nicola Mendini\nDate: 13/09/2021\nThinkyThreads Project\nNoteDragContext component\nDefines drag and drop context by using the React Beautiful DnD package\n*/\n\nimport React, { useState } from 'react';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport SearchArea from './SearchArea';\nimport WorkspaceArea from './WorkspaceArea';\nimport LinksArea from './LinksArea';\n\n// Function that is called when a drag starts\n// Stores information about the note that has been moved and its\n// original position inside a state that then gets passed\nconst onDragStart = (start, dashboard, setDraggableInfo) => {\n\n    // give some short tactile feedback\n    if (window.navigator.vibrate) {\n        window.navigator.vibrate(25);\n    }\n\n    // Initialise the draggableInfo state\n    const draggableInfo = {}\n    const sourceArea = start.source.droppableId\n    draggableInfo.sourceArea = sourceArea\n    const sourceIndex = start.source.index\n    var noteFound = null\n\n    // return the note itself so that it is possible to access some \n    // of its properties, eg: the collection that it contains\n    // this is used for some special gestures such as the dragging\n    // into the searchBar gesture\n    if(sourceArea==='workspace-area'){\n        noteFound = dashboard.workspace[sourceIndex]\n    }\n    else if(sourceArea==='search-area'){\n        noteFound = dashboard.search[sourceIndex]\n    }\n    else if(sourceArea==='links-area'){\n        noteFound = dashboard.links[sourceIndex]\n    }\n    \n    if(noteFound){\n        draggableInfo.note = noteFound\n    }\n    setDraggableInfo(draggableInfo)\n}\n\nconst NoteDragContext = ({ \n    handleOnDragEnd,\n    closeCollection,\n    dashboard,\n    darkMode,\n    addNote,\n    selectNote,\n    mergeMode,\n    threadOrCollection,\n    openEditor,\n    rootsOrBranches,\n    closeAndSave,\n    searchProps,\n    setSearchProps,\n    triggerRerender\n}) => {\n\n    const [draggableInfo, setDraggableInfo] = useState({\n        sourceArea: '',\n        note: {id: null}\n    })\n\n    return(\n\n        <DragDropContext \n            onDragEnd={handleOnDragEnd} \n            onDragStart={(start) => onDragStart(start, dashboard, setDraggableInfo)}\n        >\n                \n            <SearchArea \n                closeCollection={closeCollection} \n                dashboard={dashboard} \n                darkMode={darkMode}\n                addNote={addNote}\n                selectNote={selectNote}\n                mergeMode={mergeMode} \n                threadOrCollection={threadOrCollection}\n                openEditor={openEditor}\n                rootsOrBranches={rootsOrBranches}\n                searchProps={searchProps}\n                setSearchProps={setSearchProps}\n                draggableInfo={draggableInfo}\n                triggerRerender={triggerRerender}\n            />                 \n\n            \n            <WorkspaceArea \n                dashboard={dashboard}\n                darkMode={darkMode}\n                selectNote={selectNote}\n                mergeMode={mergeMode} \n                threadOrCollection={threadOrCollection} \n                openEditor={openEditor} \n                rootsOrBranches={rootsOrBranches}\n                closeAndSave={closeAndSave}\n                draggableInfo={draggableInfo}\n                triggerRerender={triggerRerender}\n            />\n\n            <LinksArea \n                dashboard={dashboard}\n                darkMode={darkMode}\n                mergeMode={mergeMode}\n                threadOrCollection={threadOrCollection}\n                openEditor={openEditor}\n                rootsOrBranches={rootsOrBranches}\n                draggableInfo={draggableInfo}\n                triggerRerender={triggerRerender}\n            />\n\n        </DragDropContext>\n    )\n}\nexport default NoteDragContext","/*\nAuthor: Nicola Mendini\nDate: 13/09/2021\nThinkyThreads Project\nNotesPage component\nMain notes page, as opposed to Editor page or settings page\nWraps the noteDragDropContext and the Footer\n*/\n\nimport React from 'react';\nimport Footer from './Footer'\nimport NoteDragContext from './NotesDragContext';\n\nconst NotesPage = ({ \n    darkMode,\n    dashboard,\n    handleOnDragEnd,\n    GAPIloaded,\n    currentUser,\n    setCurrentPage,\n    notesUpdating,\n    setDarkMode,\n    closeCollection,\n    addNote,\n    selectNote,\n    mergeMode,\n    setMergeMode,\n    openEditor,\n    rootsOrBranches,\n    closeAndSave,\n    threadOrCollection,\n    threadOrCollectionManage,\n    setRootsOrBranches,\n    searchProps,\n    setSearchProps,\n    synchNotes,\n    editorMode,\n    triggerRerender\n}) => {\n\n    return(\n\n        <div className={darkMode ? 'container dark-mode' : 'container'}>\n\n            <NoteDragContext \n                handleOnDragEnd={handleOnDragEnd}\n                closeCollection={closeCollection}\n                dashboard={dashboard}\n                darkMode={darkMode}\n                addNote={addNote}\n                selectNote={selectNote}\n                mergeMode={mergeMode}\n                threadOrCollection={threadOrCollection}\n                openEditor={openEditor}\n                rootsOrBranches={rootsOrBranches}\n                closeAndSave={closeAndSave}\n                searchProps={searchProps}\n                setSearchProps={setSearchProps}\n                editorMode={editorMode}\n                triggerRerender={triggerRerender}\n            />\n\n            <Footer \n                threadOrCollectionManage={threadOrCollectionManage}\n                threadOrCollection={threadOrCollection}\n                setRootsOrBranches={setRootsOrBranches}\n                rootsOrBranches={rootsOrBranches}\n                setDarkMode={setDarkMode}\n                mergeMode={mergeMode}\n                setMergeMode={setMergeMode}\n                selectedNote={dashboard.notes.get(dashboard.selectedNoteId)}\n                setCurrentPage={setCurrentPage}\n                notesUpdating={notesUpdating}\n                loadedUser={GAPIloaded && currentUser}\n                synchNotes={synchNotes}\n                darkMode={darkMode}\n            />\n            \n        </div>\n    )\n}\nexport default NotesPage"],"sourceRoot":""}