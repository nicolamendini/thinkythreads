{"version":3,"sources":["components/Footer.js","components/SearchBar.js","components/SearchLabel.js","components/Note.js","components/Wrapper.js","components/NotesList.js","components/SearchArea.js","components/WorkspaceLabel.js","components/WorkspaceArea.js","components/LinksArea.js","components/NotesDragContext.js","components/NotesPage.js"],"names":["notifyMerge","SHAREDMEX","toasts","toast","mergeModeOn","notifyDrive","driveNotConnected","notifySynch","Footer","threadOrCollectionManage","threadOrCollection","setRootsOrBranches","rootsOrBranches","setDarkMode","mergeMode","setMergeMode","selectedNote","setCurrentPage","notesUpdating","loadedUser","synchNotes","darkMode","darkModeSwitch","window","localStorage","setItem","previousDarkMode","className","style","borderTop","backgroundColor","background","boxShadow","onClick","size","transform","previous","type","color","height","width","SearchBar","setSearchProps","searchProps","isDropDisabled","useEffect","goClean","areSlicesScrolled","newSearchProps","droppableId","provided","snapshot","droppableProps","ref","innerRef","threadFilter","collectionFilter","imgFilter","colorFilter","searchText","paddingTop","placeholder","onChange","event","target","value","toLowerCase","isDraggingOver","marginTop","margin","ColorPicker","setBackColor","setHasChanged","SearchLabel","closeCollection","dashboard","openedCollectionId","getCaption","notes","get","Note","note","areaName","index","handleNotePress","openEditor","triggerRerender","draggableId","ui_id","id","usingScrollKeys","name","draggableProps","dragHandleProps","onDoubleClick","backgroundImage","colorPreview","border","isDropAnimating","pinned","thread","length","collection","branches","roots","attachedImg","text","dangerouslySetInnerHTML","__html","preview","Wrapper","notesLength","draggableInfo","sourceArea","undefined","find","minWidth","align","dir","currentSlice","setCurrentSlice","prop","inline","focusPos","SLICESIZE","document","getElementById","scrollIntoView","sessionStorage","currentSearchSlice","tryFocusOnNote","slicedNotes","targetElement","block","NotesList","handleAddNote","workspaceFlag","retrievedSlice","getItem","useState","parseInt","isVisible","setIsVisible","closingEditor","holder","resetSearchScroll","scrollLeft","slice","visibility","direction","onScroll","container","saveScroll","map","SearchArea","addNote","selectNote","search","selectedNoteId","WorkspaceLabel","closeAndSave","openedWorkspaceId","workspaceIds","WorkspaceArea","workspace","LinksArea","links","editorModeSelection","prevSelectedNoteId","NoteDragContext","handleOnDragEnd","setDraggableInfo","onDragEnd","onDragStart","start","navigator","vibrate","source","sourceIndex","noteFound","NotesPage","GAPIloaded","currentUser","editorMode"],"mappings":"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","file":"static/js/9.8a7af5ce.chunk.js","sourcesContent":["/*\nAuthor: Nicola Mendini\nDate: 11/2021\nThinkyThreads Project\nEditorFooter component\nDefines the buttons of the footer and calls the respective functions\n*/\n\nimport { FcIdea, FcSettings, FcParallelTasks, FcBrokenLink, FcLink, FcImport, FcCheckmark, FcCancel} from 'react-icons/fc'\nimport { AiOutlineDisconnect, AiOutlineLink, AiOutlineImport, AiOutlineStop } from 'react-icons/ai';\nimport { GoLightBulb } from 'react-icons/go'\nimport { VscSettingsGear, VscCheck, VscSync } from 'react-icons/vsc';\nimport { IoIosGitBranch } from 'react-icons/io';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from \"react-loader-spinner\";\nimport { driveNotConnected, mergeModeOn } from '../helpers/Messages';\nimport React from 'react'\nimport { toast } from 'react-toastify';\nimport { SHAREDMEX } from './Dashboard';\n\nconst notifyMerge = () => SHAREDMEX.toasts && toast(mergeModeOn);\nconst notifyDrive = () => SHAREDMEX.toasts && toast(driveNotConnected);\nconst notifySynch = () => SHAREDMEX.toasts && toast('Synchronising your notes...')\n\n// Footer component\n// takes the threadOrCollection state and a function to change it,\n// rootsOrBranches state and a function to chage it,\n// a function to switch the darkMode state\n// mergeMode state and a function to change it,\n// the selectedNote,\n// a function to change the current page, used to move to settings page,\n// the notesUpdating flag to show the animation\n// and the loadedUser flag to pass to the settings\n// Most of the props are used to show the correct icons and switch states\nconst Footer = ({\n    threadOrCollectionManage, \n    threadOrCollection, \n    setRootsOrBranches, \n    rootsOrBranches, \n    setDarkMode, \n    mergeMode, \n    setMergeMode,\n    selectedNote,\n    setCurrentPage,\n    notesUpdating,\n    loadedUser,\n    synchNotes,\n    darkMode\n}) => {\n\n    const darkModeSwitch = () =>{\n        window.localStorage.setItem('dark-mode', !darkMode)\n        setDarkMode((previousDarkMode) => !previousDarkMode)\n    }\n    return(\n        <div className='page-footer'\n            style={darkMode ? \n                {borderTop: '1px solid #2a2a2a', backgroundColor: '#1b1b1b'} \n                : \n                {borderTop: '#dddddd', background: 'linear-gradient(#eeeeee, white)', boxShadow: '0 0 3px #bbbbbb'}\n            }\n        >\n            {darkMode ?\n                <VscSettingsGear\n                    className='tools-btn'\n                    onClick={() => setCurrentPage('settings')}\n                    size='2.5em'\n                    style={{transform: 'scale(0.75)'}}\n                />\n                :\n                <FcSettings\n                    className='tools-btn'\n                    onClick={() => setCurrentPage('settings')}\n                    size='2.5em'\n                />\n            }\n\n            {!threadOrCollection ? (\n                darkMode ? \n                    <AiOutlineDisconnect\n                        onClick={() =>\n                            threadOrCollectionManage(\n                                !threadOrCollection\n                            )\n                        }\n                        size='2.5em'\n                        className='tools-btn'\n                        style={{transform: 'rotate(45deg) scale(0.85)'}}\n                    />\n                :\n                    <FcBrokenLink\n                        onClick={() =>\n                            threadOrCollectionManage(\n                                !threadOrCollection\n                            )\n                        }\n                        size='2.5em'\n                        className='tools-btn'\n                    />\n            )\n            :\n            (\n                darkMode ?\n                    <AiOutlineLink\n                        onClick={() =>\n                            threadOrCollectionManage(\n                                !threadOrCollection\n                            )\n                        }\n                        size='2.5em'\n                        className='tools-btn'\n                        style={{transform: 'rotate(45deg) scale(0.85)'}}\n                    />\n                :\n                    <FcLink\n                        onClick={() =>\n                            threadOrCollectionManage(\n                                !threadOrCollection\n                            )\n                        }\n                        size='2.5em'\n                        className='tools-btn'\n                    />\n                )\n            }\n            {\n                darkMode ?\n                    <IoIosGitBranch\n                        onClick={() =>\n                            setRootsOrBranches(\n                                (previous) => !previous\n                            )\n                        }\n                        size='2em'\n                        className='tools-btn'\n                        style={!rootsOrBranches && {transform: 'scaleY(-1)'}}\n                    />\n                :\n                    <FcParallelTasks\n                        onClick={() =>\n                            setRootsOrBranches(\n                                (previous) => {\n                                    SHAREDMEX.toasts && toast(\n                                        previous ?\n                                            'The Branches Mode is on, now you will see the effectual links between notes' \n                                            : \n                                            'The Roots Mode is on, now you will see the causal links between notes' \n                                        )\n                                    return !previous\n                                }\n                            )\n                        }\n                        size='2.3em'\n                        className='tools-btn'\n                        style={rootsOrBranches ? {transform: 'scaleY(-1) rotate(90deg)'} : {transform: 'rotate(90deg)'}}\n                    />\n            }\n\n            {selectedNote ?\n                darkMode ?\n                    <AiOutlineImport\n                        onClick={() =>{\n                                setMergeMode(\n                                    (previous) => !previous\n                                )\n                                if(!mergeMode){\n                                    notifyMerge()\n                                }\n                            }\n                        }\n                        size='1.8em'\n                        className='tools-btn'\n                        style={{transform:'scaleX(1.1) rotate(-90deg)'}}\n                    /> \n                :\n                    <FcImport\n                        onClick={() =>{\n                                setMergeMode(\n                                    (previous) => !previous\n                                )\n                                if(!mergeMode){\n                                    notifyMerge()\n                                }\n                            }\n                        }\n                        size='2.3em'\n                        className='tools-btn'\n                        style={{transform:'scaleY(1.15) rotate(-90deg)'}}\n                    />    \n            : null}\n\n            {darkMode ?\n                <GoLightBulb\n                    onClick={() => darkModeSwitch()}\n                    size='2.5em'\n                    className='tools-btn'\n                    style={{transform: 'scaleY(0.7) scaleX(0.7)'}}\n                />  \n            :\n                <FcIdea\n                onClick={() => darkModeSwitch()}\n                size='2.5em'\n                className='tools-btn'\n                />  \n            }\n\n            {loadedUser ? (\n                notesUpdating>0?\n\n                    darkMode ? \n                        <VscSync \n                            size='2em'\n                        /> \n                    :\n                        <Loader \n                            type=\"Circles\" \n                            color=\"#00BFFF\" \n                            height='1.8em'\n                            width='2.3em'\n                        /> \n\n                :\n\n                    darkMode ? \n                        <VscCheck\n                            size='2em'\n                            className='tools-btn'\n                            onClick={()=>{ notifySynch(); synchNotes()}}\n                            style={{transform: 'scaleY(0.85)'}}\n                        />\n                    :\n                        <FcCheckmark\n                            size='2.3em'\n                            className='tools-btn'\n                            onClick={()=>{notifySynch(); synchNotes()}}\n                        />\n            ) :\n\n            darkMode ?\n                <AiOutlineStop\n                    size='1.8em'\n                    onClick={()=>notifyDrive()}\n                    style={{transform: 'scaleX(-1)'}}\n                />\n            :\n                <FcCancel\n                    size='2.3em'\n                    onClick={()=>notifyDrive()}\n                />\n            }\n\n        </div>\n    );\n}\n\nexport default Footer;","/*\nAuthor: Nicola Mendini\nDate: 11/2021\nThinkyThreads Project\nSearchBar component\n*/\n\nimport React, { useEffect } from 'react'\nimport { Droppable } from 'react-beautiful-dnd'\nimport { FcSearch } from 'react-icons/fc'\nimport { BiSearchAlt } from 'react-icons/bi'\nimport ColorPicker from './ColorPicker'\nimport { BsPaperclip } from 'react-icons/bs'\nimport { VscChromeClose } from 'react-icons/vsc'\nimport { SHAREDMEX } from './Dashboard'\n\n\nconst SearchBar = ({ \n\tsetSearchProps, \n\tsearchProps ,\n\tisDropDisabled,\n\tdarkMode\n}) => {\t\n\n\tuseEffect(() => {\n\t\tif(searchProps.goClean && !searchProps.areSlicesScrolled){\n\t\t\tconst newSearchProps = {...searchProps}\n\t\t\tnewSearchProps.goClean = false\n\t\t\tsetSearchProps(newSearchProps)\n\t\t}\n\t// eslint-disable-next-line\n\t}, [searchProps])\n\n\t// function to check whether any search filters are active\n\tconst searchCleanerCheck = () => {\n\t\tif(\n\t\t\tsearchProps.threadFilter ||\n\t\t\tsearchProps.collectionFilter || \n\t\t\tsearchProps.imgFilter ||\n\t\t\tsearchProps.colorFilter!=='#ededed' ||\n\t\t\tsearchProps.searchText ||\n\t\t\tsearchProps.areSlicesScrolled\n\t\t){\n\t\t\treturn true\n\t\t}\n\t\treturn false\n\t}\n\n\treturn (\n\n\t\t<Droppable \n\t\t\tdroppableId={'search-bar'}\n\t\t\tisDropDisabled={isDropDisabled}\n\t\t>\n\t\t\t{(provided, snapshot) => (\n                <div \n                    className={darkMode ? 'search-dark' : 'search-bright'}\n                    {...provided.droppableProps} \n                    ref={provided.innerRef} \n\t\t\t\t>\n\n\t\t\t\t\t{\t\t\n\t\t\t\t\tsearchCleanerCheck() ?\n\t\t\t\t\t\n\t\t\t\t\t\t<VscChromeClose \n\t\t\t\t\t\t\tsize='1.6em'\n\t\t\t\t\t\t\tclassName='tools-btn search-icons'\n\t\t\t\t\t\t\tonClick={() => setSearchProps({\n\t\t\t\t\t\t\t\tsearchText:'', \n\t\t\t\t\t\t\t\tthreadFilter: false, \n\t\t\t\t\t\t\t\tcollectionFilter: false,\n\t\t\t\t\t\t\t\tcolorFilter: '#ededed',\n\t\t\t\t\t\t\t\timgFilter: false,\n\t\t\t\t\t\t\t\tgoClean: true,\n\t\t\t\t\t\t\t\tareSlicesScrolled: searchProps.areSlicesScrolled\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\tcolor={darkMode ? '#666666' : '#464646'}\n\t\t\t\t\t\t\tstyle={{paddingTop: '3px', transform:'scale(0.8)'}}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t:\n\n\t\t\t\t\t\tdarkMode ?\n\t\t\t\t\t\t\t<BiSearchAlt className='search-icons' size='2em' />\n\t\t\t\t\t\t:\n\t\t\t\t\t\t\t<FcSearch className='search-icons' size='2em' />\n\t\t\t\t\t}\n\t\t\t\t\t{provided.placeholder}\n\n\t\t\t\t\t<input\n\t\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\t\tconst newSearchProps = {...searchProps}\n\t\t\t\t\t\t\tnewSearchProps.searchText = event.target.value.toLowerCase()\n\t\t\t\t\t\t\tsetSearchProps(newSearchProps)\n\t\t\t\t\t\t\tSHAREDMEX['search-area-scroll'] = 0\n\t\t\t\t\t\t}}\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tplaceholder={\n\t\t\t\t\t\t\tsnapshot.isDraggingOver ?\n\t\t\t\t\t\t\t\t'Work within this collection'\n\t\t\t\t\t\t\t: \n\t\t\t\t\t\t\t\t'Type to search'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\tvalue={searchProps.searchText}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<span \n\t\t\t\t\t\tclassName='search-filter tools-btn' \n\t\t\t\t\t\tstyle={searchProps.imgFilter ?  {color:'red'} : {}}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tconst newSearchProps = {...searchProps}\n\t\t\t\t\t\t\tnewSearchProps.imgFilter = !newSearchProps.imgFilter\n\t\t\t\t\t\t\tsetSearchProps(newSearchProps)\n\t\t\t\t\t\t\tSHAREDMEX['search-area-scroll'] = 0\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<BsPaperclip \n\t\t\t\t\t\t\tsize='0.9em' \n\t\t\t\t\t\t\tstyle={{marginTop: '4px', transform: 'rotate(180deg)'}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</span>\n\n\t\t\t\t\t<span \n\t\t\t\t\t\tclassName='search-filter tools-btn' \n\t\t\t\t\t\tstyle={searchProps.threadFilter ?  {color:'red'} : {}}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tconst newSearchProps = {...searchProps}\n\t\t\t\t\t\t\tnewSearchProps.threadFilter = !newSearchProps.threadFilter\n\t\t\t\t\t\t\tsetSearchProps(newSearchProps)\n\t\t\t\t\t\t\tSHAREDMEX['search-area-scroll'] = 0\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tT\n\t\t\t\t\t</span>\n\n\t\t\t\t\t<span \n\t\t\t\t\t\tclassName='search-filter tools-btn'\n\t\t\t\t\t\tstyle={searchProps.collectionFilter ? {color:'red'} : {}}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tconst newSearchProps = {...searchProps}\n\t\t\t\t\t\t\tnewSearchProps.collectionFilter = !newSearchProps.collectionFilter\n\t\t\t\t\t\t\tsetSearchProps(newSearchProps)\n\t\t\t\t\t\t\tSHAREDMEX['search-area-scroll'] = 0\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tC\n\t\t\t\t\t</span>\n\n\t\t\t\t\t<span style={{margin: '0 5px 0 0'}}>\n\t\t\t\t\t\t<ColorPicker \n\t\t\t\t\t\t\tsetBackColor={{}}\n\t\t\t\t\t\t\tsetHasChanged={{}}\n\t\t\t\t\t\t\tsearchProps={searchProps}\n\t\t\t\t\t\t\tsetSearchProps={setSearchProps}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</span>\n\n\t\t\t\t</div>\n\t\t\t)}\n\n\t\t</Droppable>\n\t);\n};\n\nexport default SearchBar;\n","/*\nAuthor: Nicola Mendini\nDate: 11/2021\nThinkyThreads Project\nSearchLabel component\nGives information about the current state of the search\nand the filters applied to it\n*/\n\nimport React from 'react';\nimport { getCaption } from '../helpers/DashboardUtils';\nimport { VscChromeClose } from 'react-icons/vsc';\n\nconst SearchLabel = ({ \n    searchProps, \n    closeCollection, \n    dashboard,\n    darkMode\n}) => {\n\n    return(\n        <div className='stripe-label'>\n\n            <div className='stripe-not-overflow' style={{width: '80vw'}}>\n                NOTE FINDER  \n                {searchProps.threadFilter && ' - THREADS'} \n                {searchProps.collectionFilter && ' - COLLECTIONS'}\n                {\n                    dashboard.openedCollectionId && ' : ' + \n                    getCaption(dashboard.notes.get(dashboard.openedCollectionId))\n                }\n            </div>\n\n            {dashboard.openedCollectionId && \n                <div>\n                    <VscChromeClose \n                        size='2em'\n                        className='tools-btn close-btn'\n                        onClick={() => closeCollection()}\n                        color={darkMode ? 'white' : 'black'}\n                    />\n                </div>\n            }\n\n        </div>\n    )\n}\n\nexport default SearchLabel","/*\nAuthor: Nicola Mendini\nDate: 11/2021\nThinkyThreads Project\nNote component\nDefines the single note object and all the actions that are possible with it\n*/\n\nimport { Draggable } from 'react-beautiful-dnd';\nimport React from 'react';\nimport {RiPushpin2Fill} from 'react-icons/ri'\nimport { FaLink, FaFolder } from 'react-icons/fa'\nimport { ImTree } from 'react-icons/im'\nimport { FiPaperclip } from 'react-icons/fi'\nimport { SHAREDMEX } from './Dashboard';\n\n// Note component takes the note to show, \n// the name of the area it compares in,\n// the index of the note inside the sequence,\n// handleNotePress to select a note if it is pressed,\n// the darkMode, mergeMode, rootsOrBranches, threadOrCollection flags\n// the selectedNote,\n// the openEditor function to edit the note on double click\n\n\nconst Note = ({ \n\tnote, \n\tareaName, \n\tindex, \n\thandleNotePress, \n\tdarkMode, \n\tselectedNote,\n\tmergeMode,\n\topenEditor,\n\trootsOrBranches,\n\ttriggerRerender\n\n}) => {\n\n\treturn (\n\n\t\t\t<Draggable key={note.ui_id} draggableId={note.ui_id} index={index}>\n\t\t\t\t{(provided, snapshot) => (\n\t\t\t\t\t\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<li \n\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t(mergeMode && selectedNote.id===note.id && 'note no-scrollbar merge-mode')\n\t\t\t\t\t\t\t||\n\t\t\t\t\t\t\t(((darkMode && selectedNote && selectedNote.id===note.id && !SHAREDMEX.usingScrollKeys) && \n\t\t\t\t\t\t\t\t'note note-dark no-scrollbar selected-note-dark') || \n\t\t\t\t\t\t\t((darkMode && (!selectedNote || selectedNote.id!==note.id)) && \n\t\t\t\t\t\t\t\t'note note-dark no-scrollbar') ||\n\t\t\t\t\t\t\t((!darkMode && selectedNote && selectedNote.id===note.id && !SHAREDMEX.usingScrollKeys) &&\n\t\t\t\t\t\t\t\t'note note-bright no-scrollbar selected-note') ||\n\t\t\t\t\t\t\t((!darkMode && (!selectedNote ||selectedNote.id!==note.id)) &&\n\t\t\t\t\t\t\t\t'note note-bright no-scrollbar')) \n\t\t\t\t\t\t}\n\t\t\t\t\t\tname={note.id}\n\t\t\t\t\t\tid={note.ui_id}\n\t\t\t\t\t\tref={provided.innerRef} \n\t\t\t\t\t\t{...provided.draggableProps}\n\t\t\t\t\t\t{...provided.dragHandleProps}\n\t\t\t\t\t\tonClick={()=> handleNotePress(note)}\n\t\t\t\t\t\tonDoubleClick={()=> openEditor(note)}\n\t\t\t\t\t\tstyle={ \n\t\t\t\t\t\t\t!(mergeMode && selectedNote.id===note.id) ? (\n\t\t\t\t\t\t\t\t!darkMode && note.color!=='#ffffff' ? \n\t\t\t\t\t\t\t\t\t(selectedNote && selectedNote.id===note.id ? \n\t\t\t\t\t\t\t\t\t\t{backgroundColor: note.color, ...provided.draggableProps.style} : \n\t\t\t\t\t\t\t\t\t{backgroundColor: note.color, border: '1px solid '+ note.color, ...provided.draggableProps.style}) : \n\t\t\t\t\t\t\t\t\t\t(note.color!=='#ffffff' ? \n\t\t\t\t\t\t\t\t\t\t\t{backgroundImage: 'linear-gradient(25deg, rgb(92, 92, 92) 92%, '+note.colorPreview + ' 92%)', ...provided.draggableProps.style} \n\t\t\t\t\t\t\t\t\t\t\t: provided.draggableProps.style))\n\t\t\t\t\t\t\t: provided.draggableProps.style\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{snapshot.isDropAnimating}\n\t\t\t\t\t\t\t{selectedNote && selectedNote.id===note.id && triggerRerender}\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t{note.pinned && areaName==='search-area' &&\n\t\t\t\t\t\t\t\t\t<RiPushpin2Fill size='10px' className='header-icon'/>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t{note.thread.length ?\n\t\t\t\t\t\t\t\t\t<FaLink size='10px' className='header-icon'/> : ''\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t{note.collection.length ?\n\t\t\t\t\t\t\t\t\t<FaFolder size='10px' className='header-icon'/> : ''\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t{!rootsOrBranches && note.branches.length ?\n\t\t\t\t\t\t\t\t\t<ImTree size='10px' className='header-icon'/> : ''\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t{rootsOrBranches && note.roots.length ?\n\t\t\t\t\t\t\t\t\t<ImTree size='10px' className='header-icon' style={{transform: 'scaleY(-1)'}}\t/> : ''\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t{note.attachedImg && !note.attachedImg[2] ?\n\t\t\t\t\t\t\t\t\t<FiPaperclip size='10px' className='header-icon' style={{transform:'rotate(-45deg)'}}/> : ''\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{(!note.attachedImg || !note.attachedImg[2]) ?\n\t\t\t\t\t\t\t\t<div className='note-content no-scrollbar' dangerouslySetInnerHTML={{__html: note.preview}}></div> : \n\t\t\t\t\t\t\t\t<div className='just-background-note' style={{backgroundImage: 'url('+ note.text +')'}}></div>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</Draggable>\n\t);\n};\n\nexport default Note;\n","/*\nAuthor: Nicola Mendini\nDate: 11/2021\nThinkyThreads Project\nWrapper component\nUsed to wrap an unsaved thread inside an empty note\nor to expand the thread or collection contained in any\narbitrary note\n*/\n\nimport {Droppable} from 'react-beautiful-dnd';\nimport React from 'react'\n\nconst Wrapper = ({\n\tthreadOrCollection,\n    notesLength,\n    draggableInfo,\n    notes,\n    darkMode\n}) => {\n\n    // Disable dropping here unless the note comes from the search area\n    // and it is empty if you are trying to wrap an unsaved thread/collection\n    // or it is full if you are trying to expand it to show its content\n    const isDropDisabled = \n        draggableInfo.sourceArea!=='search-area' ||\n        (\n            notesLength>0 ? (\n\n                draggableInfo.note.thread.length>0 || \n                draggableInfo.note.collection.length>0\n            )\n            :\n            (\n                !draggableInfo.note.thread.length && \n                !draggableInfo.note.collection.length \n            )\n            \n        ) ||\n        (notes.find(note => note.id===draggableInfo.note.id)!==undefined)\n    \n    return (\n\n        <Droppable \n            droppableId='wrapper-area'\n            isDropDisabled={isDropDisabled}\n        >\n\n            {(provided, snapshot) => (\n                <div \n                    className='wrapper'\n                    {...provided.droppableProps} \n                    ref={provided.innerRef} \n                    style={ \n                        notesLength > 0 ? (\n                            {\n                            ...(\n                                darkMode ?\n                                    threadOrCollection ? {backgroundColor:'#fccb00', color:'black'} \n                                    : {backgroundColor:'#1273de', color:'white'}\n                                :\n                                    threadOrCollection ? {backgroundColor:'#fef3bd', color:'black'} \n                                    : {backgroundColor:'#c4def6', color:'black'}\n                            ), \n                            ...(!snapshot.isDraggingOver && {minWidth:\"8vh\"})\n                            })\n                        : \n                        darkMode ?\n                        {backgroundColor: '#2e2e2e', minWidth:\"8vh\", color: '#666666'}\n                        :\n                        {backgroundColor: '#f4f4f4', minWidth:\"8vh\", boxShadow: '1px 0px 1px #dddddd'}\n                    }\n                >\n\n                <div className='vertical-text'>{notesLength>0 ? 'WRAP' : 'drop to expand'}</div>\n\n                {provided.placeholder}\n\n                {\n                    snapshot.isDraggingOver?\n                    \n                        (notesLength > 0 ?\n                            (\n                                <div className='vertical-text'>\n                                    wrap <br></br> \n                                    {threadOrCollection ? ' thread ' : ' collection '}\n                                    <br></br> \n                                    inside note\n                                </div>\n                            ) \n                        :\n                            (\n                                <div className='vertical-text'>\n                                    expand\n                                    <br></br> \n                                    {draggableInfo.note.thread.length ? \n                                        'thread' : 'collection'\n                                    }\n                                </div>\n                            ) \n                        ) : null\n                }\n\n                </div>\n\n            )}\n\n        </Droppable>\n\n    )\n}\nexport default Wrapper","/*\nAuthor: Nicola Mendini\nDate: 11/2021\nThinkyThreads Project\nNotesList component\nDefines a general list of notes that acts as a Droppable\nin the framework of React Beautiful Dnd\n*/\n\nimport Note from './Note';\nimport {Droppable} from 'react-beautiful-dnd';\nimport { useEffect, useState } from 'react';\nimport {FcNext, FcPrevious, FcPlus} from 'react-icons/fc';\nimport { BsChevronRight, BsChevronLeft } from 'react-icons/bs';\nimport { BsPlusSquare } from 'react-icons/bs'\nimport Wrapper from './Wrapper';\nimport React from 'react'\nimport { SHAREDMEX, SLICESIZE } from './Dashboard';\n\n// Max size of a row of notes, it is necessary to press the arrow\n// button to access further notes\n// Function used to change slice based on which arrow button has been pressed\nconst align = (dir, currentSlice, setCurrentSlice, notes, areaName) => {\n\n\t// Before changing slice, set up the autoscroll\n\t// Initialise a prop based on whether the button was next or prev\n\tconst prop = dir===-1 ? {inline:'start'} : {inline:'end'}\n\tvar focusPos = currentSlice*SLICESIZE+SLICESIZE-1\n\n\t// If overflows, go back to last note of the sequence\n\tif(focusPos>notes.length-1){\n\t\tfocusPos=notes.length-1\n\t}\n\n\t// scroll into the last note of the previous slice to give the idea of continuity \n\t// between slices\n\tdocument.getElementById(notes[focusPos].ui_id).scrollIntoView(prop);\n\tsetCurrentSlice(currentSlice+dir)\n\twindow.sessionStorage.setItem('current-slice-'+areaName, currentSlice+dir)\n\tif(areaName==='search-area'){\n\t\tSHAREDMEX.currentSearchSlice = currentSlice+dir\n\t}\n}\n\nconst tryFocusOnNote = (selectedNote, slicedNotes) => {\n\t// If there is a selectedNote to scroll to, do it\n\tif(selectedNote){\n\t\tconst focusPos = slicedNotes.find(note => note.id === selectedNote.id)\n\t\tif(focusPos){\n\t\t\tconst targetElement = document.getElementById(focusPos.ui_id)\n\t\t\tif(targetElement){\n\t\t\t\ttargetElement.scrollIntoView({block: 'nearest'})\n\t\t\t\treturn true\n\t\t\t}\n\t\t}\n\t}\n}\n\nconst NotesList = ({\n\tnotes,\n\thandleAddNote,\n\tareaName,\n\thandleNotePress,\n\tdarkMode,\n\tselectedNote,\n\tmergeMode,\n\tthreadOrCollection,\n\topenEditor,\n\tworkspaceFlag, \n\trootsOrBranches,\n\tisDropDisabled,\n\tdraggableInfo,\n\tsearchProps,\n\tsetSearchProps,\n\ttriggerRerender\n}) => {\n\n\tconst retrievedSlice = window.sessionStorage.getItem('current-slice-'+areaName)\n\t// State that defines the slice the user is at\n\tconst [currentSlice, setCurrentSlice] = useState(\n\t\tretrievedSlice ? \n\t\tparseInt(retrievedSlice) :\n\t\t0\n\t)\n\t// State to hide the NotesList until the scroll is performed, used to avoid flickering\n\tconst [isVisible, setIsVisible] = useState(false)\n\n\t// Effect to set back the scroll once exiting the editor\n\tuseEffect(() => {\n\t\tif(!SHAREDMEX.usingScrollKeys){\n\t\t\tif(areaName !=='search-area' && !SHAREDMEX.closingEditor){\n\t\t\t\ttryFocusOnNote(selectedNote, slicedNotes)\n\t\t\t}\n\t\t\telse{\n\t\t\t\tconst holder = document.getElementById(areaName)\n\t\t\t\tif(holder){\n\t\t\t\t\tif(SHAREDMEX.resetSearchScroll){\n\t\t\t\t\t\tholder.scrollLeft = 0\n\t\t\t\t\t\tSHAREDMEX.resetSearchScroll = false\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tholder.scrollLeft = SHAREDMEX[areaName+'-scroll']\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Otherwise, if there are no notes in the current slices, go to slice 0\n\t\tif(!slicedNotes.length && currentSlice!==0){\n\t\t\tsetCurrentSlice(0)\n\t\t\twindow.sessionStorage.setItem('current-slice-'+areaName, 0)\n\t\t\tSHAREDMEX[areaName+'-scroll'] = 0\n\t\t\tif(areaName === 'search-area'){\n\t\t\t\tSHAREDMEX.currentSearchSlice = 0\n\t\t\t}\n\t\t}\n\t\tsetIsVisible(true)\n\t// eslint-disable-next-line\n\t}, [notes])\n\n\t// effect to keep the selected note at the center if the user is scrolling with the keys\n\tuseEffect(() => {\n\t\tif(areaName==='search-area' && SHAREDMEX.usingScrollKeys){\n\t\t\ttryFocusOnNote(selectedNote, slicedNotes)\n\t\t\tSHAREDMEX.usingScrollKeys = false\n\t\t\tsetIsVisible(true)\n\t\t}\n\t// eslint-disable-next-line\n\t},[selectedNote])\n\n\t// Effect to restore the search to the first slice\n\tuseEffect(() => {\n\t\tif(areaName==='search-area' && searchProps.goClean && currentSlice > 0){\n\t\t\tsetCurrentSlice(0)\n\t\t\twindow.sessionStorage.setItem('current-slice-'+areaName, 0)\n\t\t\tSHAREDMEX.currentSearchSlice = 0\n\t\t}\n\t// eslint-disable-next-line\n\t}, [searchProps])\n\n\tuseEffect(() => {\n\t\tif(areaName==='search-area'){\n\t\t\tconst newSearchProps = {...searchProps}\n\t\t\tif(currentSlice > 0){\n\t\t\t\tnewSearchProps.areSlicesScrolled = true\n\t\t\t}\n\t\t\telse{\n\t\t\t\tnewSearchProps.areSlicesScrolled = false\n\t\t\t}\n\t\t\tif(searchProps.goClean){\n\t\t\t\tconst container = document.getElementById(areaName)\n\t\t\t\tcontainer.scrollLeft = 0\n\t\t\t\tnewSearchProps.goClean = false\n\t\t\t}\n\t\t\tsetSearchProps(newSearchProps)\n\t\t}\n\t// eslint-disable-next-line\n\t}, [currentSlice])\n\n\tuseEffect(()=>{\n\t\tif(isVisible){\n\t\t\tSHAREDMEX.closingEditor = false\n\t\t}\n\t},[isVisible])\n\n\tconst saveScroll = () => {\n\t\tconst container = document.getElementById(areaName)\n\t\tif(container){\n\t\t\tSHAREDMEX[areaName+'-scroll'] = container.scrollLeft\n\t\t}\n\t}\n\n\tconst slicedNotes = notes.slice(currentSlice*SLICESIZE, (currentSlice+1)*SLICESIZE+SLICESIZE)\n\n\treturn (\n\n\t\t<div style={{visibility: isVisible ? 'visible' : 'hidden'}}>\n\n\t\t\t<Droppable \n\t\t\t\tdroppableId={areaName} \n\t\t\t\tdirection='horizontal' \n\t\t\t\tclassName='droppable-wrapper' \n\t\t\t\tisDropDisabled={isDropDisabled}\n\t\t\t>\n\n\t\t\t\t{(provided) => (\n\n\t\t\t\t\t<ul \n\t\t\t\t\t\tclassName='notes-list' \n\t\t\t\t\t\t{...provided.droppableProps} \n\t\t\t\t\t\tref={provided.innerRef} \n\t\t\t\t\t\tid={areaName}\n\t\t\t\t\t\tonScroll={() => saveScroll()}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t{currentSlice>0 ?\n\t\t\t\t\t\t\t\t\tdarkMode ?\n\t\t\t\t\t\t\t\t\t\t<BsChevronLeft \n\t\t\t\t\t\t\t\t\t\t\tclassName='tools-btn arrow-btn'\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => align(-1, currentSlice, setCurrentSlice, notes, areaName)}\n\t\t\t\t\t\t\t\t\t\t\tsize='2.5em'\n\t\t\t\t\t\t\t\t\t\t\tcolor='#666666'\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t\t<FcPrevious \n\t\t\t\t\t\t\t\t\t\t\tclassName='tools-btn arrow-btn'\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => align(-1, currentSlice, setCurrentSlice, notes, areaName)}\n\t\t\t\t\t\t\t\t\t\t\tsize='2.5em'\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t: null}\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t{(areaName==='workspace-area' && workspaceFlag) &&\n\n\t\t\t\t\t\t\t\t<Wrapper \n\t\t\t\t\t\t\t\t\tthreadOrCollection={threadOrCollection}\n\t\t\t\t\t\t\t\t\tnotesLength={notes.length}\n\t\t\t\t\t\t\t\t\tdraggableInfo={draggableInfo}\n\t\t\t\t\t\t\t\t\tnotes={notes}\n\t\t\t\t\t\t\t\t\tdarkMode={darkMode}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t{(areaName==='search-area' && currentSlice===0) &&\n\t\t\t\t\t\t\t\t\t(darkMode ?\n\t\t\t\t\t\t\t\t\t<BsPlusSquare \n\t\t\t\t\t\t\t\t\t\tclassName='tools-btn arrow-btn add-btn'\n\t\t\t\t\t\t\t\t\t\tonClick={() => handleAddNote()}\n\t\t\t\t\t\t\t\t\t\tsize='2.25em'\n\t\t\t\t\t\t\t\t\t\tcolor='#555555'\n\t\t\t\t\t\t\t\t\t\tstyle={{transform: 'scale(0.8)'}}\n\t\t\t\t\t\t\t\t\t\tid='plus'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t<FcPlus\n\t\t\t\t\t\t\t\t\t\tclassName='tools-btn arrow-btn add-btn'\n\t\t\t\t\t\t\t\t\t\tonClick={() => handleAddNote()}\n\t\t\t\t\t\t\t\t\t\tsize='2.25em'\n\t\t\t\t\t\t\t\t\t\tid='plus'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t{slicedNotes.map((note, index) => (\n\n\t\t\t\t\t\t\t\t<Note\n\t\t\t\t\t\t\t\t\tkey={note.ui_id}\n\t\t\t\t\t\t\t\t\tnote={note}\n\t\t\t\t\t\t\t\t\tareaName={areaName}\n\t\t\t\t\t\t\t\t\tindex={index+currentSlice*SLICESIZE}\n\t\t\t\t\t\t\t\t\thandleNotePress={handleNotePress}\n\t\t\t\t\t\t\t\t\tdarkMode={darkMode}\n\t\t\t\t\t\t\t\t\tselectedNote={selectedNote}\n\t\t\t\t\t\t\t\t\tmergeMode={mergeMode}\n\t\t\t\t\t\t\t\t\topenEditor={openEditor}\n\t\t\t\t\t\t\t\t\trootsOrBranches={rootsOrBranches}\n\t\t\t\t\t\t\t\t\ttriggerRerender={triggerRerender}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t))}\n\n\t\t\t\t\t\t\t{provided.placeholder}\n\n\t\t\t\t\t\t\t<div> \n\t\t\t\t\t\t\t\t{(currentSlice+1)*SLICESIZE+SLICESIZE<notes.length ? \n\n\t\t\t\t\t\t\t\t\tdarkMode ?\n\t\t\t\t\t\t\t\t\t\t<BsChevronRight \n\t\t\t\t\t\t\t\t\t\t\tclassName='tools-btn arrow-btn'\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => align(1, currentSlice, setCurrentSlice, notes, areaName)}\n\t\t\t\t\t\t\t\t\t\t\tsize='2.5em'\n\t\t\t\t\t\t\t\t\t\t\tcolor='#666666'\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t\t<FcNext \n\t\t\t\t\t\t\t\t\t\t\tclassName='tools-btn arrow-btn'\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => align(1, currentSlice, setCurrentSlice, notes, areaName)}\n\t\t\t\t\t\t\t\t\t\t\tsize='2.5em'\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t: null}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t</ul>\n\t\t\t\t)}\n\n\t\t\t</Droppable>\n\t\t</div>\n\t);\n};\n\nexport default NotesList;\n","/*\nAuthor: Nicola Mendini\nDate: 11/2021\nThinkyThreads Project\nSearchArea component\nSearch Area that includes the searchBar, the Search Label\nand the notes list containing the results of the search\n*/\n\nimport React from 'react';\nimport SearchBar from './SearchBar';\nimport SearchLabel from './SearchLabel';\nimport NotesList from './NotesList';\n\nconst SearchArea = ({ \n    closeCollection, \n    dashboard, \n    darkMode, \n    addNote, \n    selectNote, \n    mergeMode, \n    threadOrCollection, \n    openEditor, \n    rootsOrBranches,\n    searchProps,\n    setSearchProps,\n    draggableInfo,\n    triggerRerender\n}) => {\n\n    // Dropping here is disabled unless the note comes from the \n    // search area itself and has a collection within it\n    // The gesture is used to expand it\n    const isDropDisabled = \n        draggableInfo.sourceArea!=='search-area' ||\n        !draggableInfo.note.collection.length\n\n    return(\n        <div>\n            <SearchBar \n                setSearchProps={setSearchProps} \n                searchProps={searchProps}\n                isDropDisabled={isDropDisabled}\n                darkMode={darkMode}\n            />\n\n            <div>\n                <SearchLabel \n                    searchProps={searchProps} \n                    closeCollection={closeCollection}\n                    dashboard={dashboard}\n                    darkMode={darkMode}\n                />\n                \n                <NotesList\n                    notes={dashboard.search}\n                    handleAddNote={addNote}\n                    areaName={'search-area'}\n                    handleNotePress={selectNote}\n                    darkMode={darkMode}\n                    selectedNote={dashboard.notes.get(dashboard.selectedNoteId)}\n                    mergeMode={mergeMode}\n                    threadOrCollection={threadOrCollection}\n                    openEditor={openEditor}\n                    rootsOrBranches={rootsOrBranches}\n                    searchProps={searchProps}\n                    setSearchProps={setSearchProps}\n                    triggerRerender={triggerRerender}\n                />\n            </div> \n        </div>\n    )\n}\n\nexport default SearchArea","/*\nAuthor: Nicola Mendini\nDate: 11/2021\nThinkyThreads Project\nWorkspaceLabel component\nGives information about the current state of the workspace\n*/\n\nimport React from 'react';\nimport { getCaption } from '../helpers/DashboardUtils';\nimport { VscChromeClose } from 'react-icons/vsc';\n\nconst WorkspaceLabel = ({ \n    dashboard,\n    threadOrCollection,\n    closeAndSave,\n    darkMode\n}) => {\n\nreturn(\n    <div className='stripe-label'>\n\n        <div className='stripe-not-overflow' style={{width: '80vw'}}>\n\n            CURRENT {threadOrCollection ? ' THREAD ' : ' COLLECTION '} \n            {dashboard.openedWorkspaceId ?\n                    ' : ' + getCaption(dashboard.notes.get(dashboard.openedWorkspaceId))\n                : (dashboard.workspaceIds.length ? \n                    (threadOrCollection ? ' : unsaved thread ' : ' : unsaved collection ') \n            : null)\n            }\n        </div>\n\n        {dashboard.workspaceIds.length || dashboard.openedWorkspaceId ?\n            <div>\n                <VscChromeClose \n                    size='2em'\n                    className='tools-btn close-btn'\n                    onClick={() => closeAndSave()}\n                    color={darkMode ? 'white' : 'black'}\n                />\n            </div>\n        : null}\n\n    </div>\n    )\n}\n\nexport default WorkspaceLabel","/*\nAuthor: Nicola Mendini\nDate: 11/2021\nThinkyThreads Project\nWorkspaceArea component\nContains the current workspace the user is working on\n*/\n\nimport React from 'react';\nimport NotesList from './NotesList';\nimport WorkspaceLabel from './WorkspaceLabel';\n\nconst WorkspaceArea = ({ \n    dashboard, \n    darkMode, \n    selectNote, \n    mergeMode, \n    threadOrCollection, \n    openEditor, \n    rootsOrBranches,\n    closeAndSave,\n    draggableInfo,\n    triggerRerender\n}) => { \n\n    return (\n        <div>\n\n            <WorkspaceLabel \n                dashboard={dashboard}\n                threadOrCollection={threadOrCollection}\n                closeAndSave={closeAndSave}\n                darkMode={darkMode}\n            />                \n\n            <NotesList\n                notes={dashboard.workspace}\n                areaName={'workspace-area'}\n                handleNotePress={selectNote}\n                darkMode={darkMode}\n                selectedNote={dashboard.notes.get(dashboard.selectedNoteId)}\n                mergeMode={mergeMode}\n                threadOrCollection={threadOrCollection}\n                openEditor={openEditor}\n                workspaceFlag={!dashboard.openedWorkspaceId}\n                rootsOrBranches={rootsOrBranches}\n                draggableInfo={draggableInfo}\n                triggerRerender={triggerRerender}\n            />\n\n        </div>\n    )\n}\n\nexport default WorkspaceArea","/*\nAuthor: Nicola Mendini\nDate: 11/2021\nThinkyThreads Project\nLinksArea component\nDefines the lowest row of notes of the dashboard\nwhich shows the links starting from/coming into the selectedNote\nBased of a rootsOrBranches flag\n*/\n\nimport React from 'react';\nimport NotesList from './NotesList';\nimport { getCaption } from '../helpers/DashboardUtils';\nimport { SHAREDMEX } from './Dashboard';\n\n// LinksArea component,\n// takes the dashboard to get the notes from,\n// The darkmode flag\n// some draggableInfo to know where the drags start from\nconst LinksArea = ({ \n    dashboard, \n    darkMode, \n    mergeMode, \n    threadOrCollection, \n    openEditor, \n    rootsOrBranches,\n    draggableInfo,\n    triggerRerender\n}) => { \n\n    // Flag to check whether a note is allowed to be dropped in the links area\n    const isDropDisabled = \n        draggableInfo.sourceArea==='workspace-area' ||\n        (draggableInfo.note && draggableInfo.note.id===dashboard.selectedNoteId)\n\n    // function to open the editor when a note is double clicked from the links area\n    // requires a special function to do so because it cannot undergo the usual process of \n    // only being selected, because otherwise that selection would change the links area itself\n    // and lead to unstable navigation\n    const openEditorForLinks = (note) => {\n        if(!mergeMode){\n            SHAREDMEX.editorModeSelection = 'prev'\n            dashboard.prevSelectedNoteId = dashboard.selectedNoteId\n            dashboard.selectedNoteId = note.id\n            openEditor()\n        }\n    }\n\n    return (\n        <div>\n\n            <label className='stripe-label stripe-not-overflow' style={{width: '90vw'}}>\n                {!rootsOrBranches ? ' BRANCHES' : ' ROOTS'}\n                {dashboard.selectedNoteId && ' - ' + getCaption(dashboard.notes.get(dashboard.selectedNoteId))} \n            </label>\n\n            <NotesList\n                notes={dashboard.links}\n                areaName={'branches-area'}\n                darkMode={darkMode}\n                handleNotePress={() => {}}\n                selectedNote={dashboard.notes.get(dashboard.selectedNoteId)}\n                mergeMode={mergeMode}\n                threadOrCollection={threadOrCollection}\n                openEditor={openEditorForLinks}\n                rootsOrBranches={rootsOrBranches}\n                isDropDisabled={isDropDisabled}\n                triggerRerender={triggerRerender}\n            />\n\n        </div>\n    )\n}\n\nexport default LinksArea","/*\nAuthor: Nicola Mendini\nDate: 11/2021\nThinkyThreads Project\nNoteDragContext component\nDefines drag and drop context by using the React Beautiful DnD package\n*/\n\nimport React, { useState } from 'react';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport SearchArea from './SearchArea';\nimport WorkspaceArea from './WorkspaceArea';\nimport LinksArea from './LinksArea';\n\n// Function that is called when a drag starts\n// Stores information about the note that has been moved and its\n// original position inside a state that then gets passed\nconst onDragStart = (start, dashboard, setDraggableInfo) => {\n\n    // give some short tactile feedback\n    if (window.navigator.vibrate) {\n        window.navigator.vibrate(25);\n    }\n\n    // Initialise the draggableInfo state\n    const draggableInfo = {}\n    const sourceArea = start.source.droppableId\n    draggableInfo.sourceArea = sourceArea\n    const sourceIndex = start.source.index\n    var noteFound = null\n\n    // return the note itself so that it is possible to access some \n    // of its properties, eg: the collection that it contains\n    // this is used for some special gestures such as the dragging\n    // into the searchBar gesture\n    if(sourceArea==='workspace-area'){\n        noteFound = dashboard.workspace[sourceIndex]\n    }\n    else if(sourceArea==='search-area'){\n        noteFound = dashboard.search[sourceIndex]\n    }\n    else if(sourceArea==='links-area'){\n        noteFound = dashboard.links[sourceIndex]\n    }\n    \n    if(noteFound){\n        draggableInfo.note = noteFound\n    }\n    setDraggableInfo(draggableInfo)\n}\n\nconst NoteDragContext = ({ \n    handleOnDragEnd,\n    closeCollection,\n    dashboard,\n    darkMode,\n    addNote,\n    selectNote,\n    mergeMode,\n    threadOrCollection,\n    openEditor,\n    rootsOrBranches,\n    closeAndSave,\n    searchProps,\n    setSearchProps,\n    triggerRerender\n}) => {\n\n    const [draggableInfo, setDraggableInfo] = useState({\n        sourceArea: '',\n        note: {id: null}\n    })\n\n    return(\n\n        <DragDropContext \n            onDragEnd={handleOnDragEnd} \n            onDragStart={(start) => onDragStart(start, dashboard, setDraggableInfo)}\n        >\n                \n            <SearchArea \n                closeCollection={closeCollection} \n                dashboard={dashboard} \n                darkMode={darkMode}\n                addNote={addNote}\n                selectNote={selectNote}\n                mergeMode={mergeMode} \n                threadOrCollection={threadOrCollection}\n                openEditor={openEditor}\n                rootsOrBranches={rootsOrBranches}\n                searchProps={searchProps}\n                setSearchProps={setSearchProps}\n                draggableInfo={draggableInfo}\n                triggerRerender={triggerRerender}\n            />                 \n\n            \n            <WorkspaceArea \n                dashboard={dashboard}\n                darkMode={darkMode}\n                selectNote={selectNote}\n                mergeMode={mergeMode} \n                threadOrCollection={threadOrCollection} \n                openEditor={openEditor} \n                rootsOrBranches={rootsOrBranches}\n                closeAndSave={closeAndSave}\n                draggableInfo={draggableInfo}\n                triggerRerender={triggerRerender}\n            />\n\n            <LinksArea \n                dashboard={dashboard}\n                darkMode={darkMode}\n                mergeMode={mergeMode}\n                threadOrCollection={threadOrCollection}\n                openEditor={openEditor}\n                rootsOrBranches={rootsOrBranches}\n                draggableInfo={draggableInfo}\n                triggerRerender={triggerRerender}\n            />\n\n        </DragDropContext>\n    )\n}\nexport default NoteDragContext","/*\nAuthor: Nicola Mendini\nDate: 11/2021\nThinkyThreads Project\nNotesPage component\nMain notes page, as opposed to Editor page or settings page\nWraps the noteDragDropContext and the Footer\n*/\n\nimport React from 'react';\nimport Footer from './Footer'\nimport NoteDragContext from './NotesDragContext';\n\nconst NotesPage = ({ \n    darkMode,\n    dashboard,\n    handleOnDragEnd,\n    GAPIloaded,\n    currentUser,\n    setCurrentPage,\n    notesUpdating,\n    setDarkMode,\n    closeCollection,\n    addNote,\n    selectNote,\n    mergeMode,\n    setMergeMode,\n    openEditor,\n    rootsOrBranches,\n    closeAndSave,\n    threadOrCollection,\n    threadOrCollectionManage,\n    setRootsOrBranches,\n    searchProps,\n    setSearchProps,\n    synchNotes,\n    editorMode,\n    triggerRerender\n}) => {\n\n    return(\n\n        <div className={darkMode ? 'container dark-mode' : 'container'}>\n\n            <NoteDragContext \n                handleOnDragEnd={handleOnDragEnd}\n                closeCollection={closeCollection}\n                dashboard={dashboard}\n                darkMode={darkMode}\n                addNote={addNote}\n                selectNote={selectNote}\n                mergeMode={mergeMode}\n                threadOrCollection={threadOrCollection}\n                openEditor={openEditor}\n                rootsOrBranches={rootsOrBranches}\n                closeAndSave={closeAndSave}\n                searchProps={searchProps}\n                setSearchProps={setSearchProps}\n                editorMode={editorMode}\n                triggerRerender={triggerRerender}\n            />\n\n            <Footer \n                threadOrCollectionManage={threadOrCollectionManage}\n                threadOrCollection={threadOrCollection}\n                setRootsOrBranches={setRootsOrBranches}\n                rootsOrBranches={rootsOrBranches}\n                setDarkMode={setDarkMode}\n                mergeMode={mergeMode}\n                setMergeMode={setMergeMode}\n                selectedNote={dashboard.notes.get(dashboard.selectedNoteId)}\n                setCurrentPage={setCurrentPage}\n                notesUpdating={notesUpdating}\n                loadedUser={GAPIloaded && currentUser}\n                synchNotes={synchNotes}\n                darkMode={darkMode}\n            />\n            \n        </div>\n    )\n}\nexport default NotesPage"],"sourceRoot":""}