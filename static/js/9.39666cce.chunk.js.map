{"version":3,"sources":["components/Footer.js","components/SearchBar.js","components/SearchLabel.js","components/Note.js","components/Wrapper.js","components/NotesList.js","components/SearchArea.js","components/WorkspaceLabel.js","components/WorkspaceArea.js","components/LinksArea.js","components/NotesDragContext.js","components/NotesPage.js"],"names":["Footer","threadOrCollectionManage","threadOrCollection","setRootsOrBranches","rootsOrBranches","setDarkMode","mergeMode","setMergeMode","selectedNote","setCurrentPage","notesUpdating","loadedUser","synchNotes","className","onClick","size","previous","style","transform","alert","mergeModeOn","previousDarkMode","type","color","height","width","driveNotConnected","SearchBar","setSearchProps","searchProps","isDropDisabled","droppableId","provided","snapshot","droppableProps","ref","innerRef","placeholder","onChange","event","searchText","target","value","toLowerCase","threadFilter","collectionFilter","isDraggingOver","SearchLabel","closeCollection","dashboard","darkMode","openedCollectionId","getCaption","notes","get","Note","note","areaName","index","handleNotePress","openEditor","draggableId","ui_id","id","name","draggableProps","dragHandleProps","onDoubleClick","backgroundImage","colorPreview","backgroundColor","border","isDropAnimating","pinned","thread","length","collection","branches","roots","attachedImg","text","dangerouslySetInnerHTML","__html","preview","Wrapper","notesLength","draggableInfo","sourceArea","undefined","find","minWidth","paddingLeft","SLICESIZE","NotesList","handleAddNote","workspaceFlag","useState","currentSlice","setCurrentSlice","align","dir","prop","inline","focusPos","document","getElementById","scrollIntoView","direction","slice","map","SearchArea","addNote","selectNote","search","selectedNoteId","WorkspaceLabel","closeAndSave","openedWorkspaceId","workspaceIds","WorkspaceArea","workspace","LinksArea","links","NoteDragContext","handleOnDragEnd","setDraggableInfo","onDragEnd","onDragStart","start","window","navigator","vibrate","source","sourceIndex","noteFound","NotesPage","GAPIloaded","currentUser"],"mappings":"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","file":"static/js/9.39666cce.chunk.js","sourcesContent":["/*\nAuthor: Nicola Mendini\nDate: 13/09/2021\nThinkyThreads Project\nEditorFooter component\nDefines the buttons of the footer and calls the respective functions\n*/\n\nimport { FcIdea, FcSettings, FcParallelTasks, FcBrokenLink, FcLink, FcImport, FcCheckmark, FcCancel} from 'react-icons/fc'\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from \"react-loader-spinner\";\nimport { driveNotConnected, mergeModeOn } from '../helpers/Messages';\nimport React from 'react'\n\n// Footer component\n// takes the threadOrCollection state and a function to change it,\n// rootsOrBranches state and a function to chage it,\n// a function to switch the darkMode state\n// mergeMode state and a function to change it,\n// the selectedNote,\n// a function to change the current page, used to move to settings page,\n// the notesUpdating flag to show the animation\n// and the loadedUser flag to pass to the settings\n// Most of the props are used to show the correct icons and switch states\nconst Footer = ({\n    threadOrCollectionManage, \n    threadOrCollection, \n    setRootsOrBranches, \n    rootsOrBranches, \n    setDarkMode, \n    mergeMode, \n    setMergeMode,\n    selectedNote,\n    setCurrentPage,\n    notesUpdating,\n    loadedUser,\n    synchNotes\n}) => {\n    return(\n        <div className='page-footer'>\n            <FcSettings\n                className='tools-btn'\n                onClick={() => setCurrentPage('settings')}\n                size='2.5em'\n            />\n\n            {!threadOrCollection &&\n                <FcBrokenLink\n                    onClick={() =>\n                        threadOrCollectionManage(\n                            !threadOrCollection\n                        )\n                    }\n                    size='2.5em'\n                    className='tools-btn'\n                />\n            }\n\n            {threadOrCollection &&\n                <FcLink\n                    onClick={() =>\n                        threadOrCollectionManage(\n                            !threadOrCollection\n                        )\n                    }\n                    size='2.5em'\n                    className='tools-btn'\n                />\n            }\n\n            {threadOrCollection && \n                <FcParallelTasks\n                    onClick={() =>\n                        setRootsOrBranches(\n                            (previous) => !previous\n                        )\n                    }\n                    size='2.5em'\n                    className='tools-btn'\n                    style={rootsOrBranches&&{transform: 'scaleX(-1)'}}\n                />\n            }\n\n            {selectedNote ?\n                <FcImport\n                    onClick={() =>{\n                            setMergeMode(\n                                (previous) => !previous\n                            )\n                            if(!mergeMode){\n                                alert(mergeModeOn)\n                            }\n                        }\n                    }\n                    size='2.3em'\n                    className='tools-btn'\n                    style={{transform:'scaleX(1.2)'}}\n                />    \n            : null}\n\n            <FcIdea\n                onClick={() =>\n                    setDarkMode(\n                        (previousDarkMode) => !previousDarkMode\n                    )\n                }\n                size='2.5em'\n                className='tools-btn'\n            />  \n\n            {loadedUser ? (\n                notesUpdating>0?\n\n                    <Loader \n                        type=\"Circles\" \n                        color=\"#00BFFF\" \n                        height='1.8em'\n                        width='2.3em'\n                    /> :\n\n                    <FcCheckmark\n                        size='2.3em'\n                        className='tools-btn'\n                        onClick={()=>synchNotes()}\n                    />\n            ) :\n\n            <FcCancel\n                size='2.3em'\n                onClick={()=>alert(driveNotConnected)}\n            />\n            }\n\n        </div>\n    );\n}\n\nexport default Footer;","/*\nAuthor: Nicola Mendini\nDate: 13/09/2021\nThinkyThreads Project\nSearchBar component\n*/\n\nimport React from 'react';\nimport { Droppable } from 'react-beautiful-dnd';\nimport { FcSearch } from 'react-icons/fc';\n\nconst SearchBar = ({ \n\tsetSearchProps, \n\tsearchProps ,\n\tisDropDisabled\n}) => {\n\n\treturn (\n\n\t\t<Droppable \n\t\t\tdroppableId={'search-bar'}\n\t\t\tisDropDisabled={isDropDisabled}\n\t\t>\n\t\t\t{(provided, snapshot) => (\n                <div \n                    className='search'\n                    {...provided.droppableProps} \n                    ref={provided.innerRef} \n\t\t\t\t>\n\n\t\t\t\t\t<FcSearch className='search-icons' size='2em' />\n\t\t\t\t\t{provided.placeholder}\n\n\t\t\t\t\t<input\n\t\t\t\t\t\tonChange={(event) =>\n\t\t\t\t\t\t\tsetSearchProps({\n\t\t\t\t\t\t\t\tsearchText: event.target.value.toLowerCase(), \n\t\t\t\t\t\t\t\tthreadFilter: searchProps.threadFilter, \n\t\t\t\t\t\t\t\tcollectionFilter: searchProps.collectionFilter}\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tplaceholder={\n\t\t\t\t\t\t\tsnapshot.isDraggingOver ?\n\t\t\t\t\t\t\t\t'Work within this collection'\n\t\t\t\t\t\t\t: \n\t\t\t\t\t\t\t\t'Type to search'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\tvalue={searchProps.searchText}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<span \n\t\t\t\t\t\tclassName='searchFilter tools-btn' \n\t\t\t\t\t\tstyle={searchProps.threadFilter ?  {color:'red'} : {}}\n\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\tsetSearchProps({\n\t\t\t\t\t\t\t\tsearchText: searchProps.searchText, \n\t\t\t\t\t\t\t\tthreadFilter: !searchProps.threadFilter, \n\t\t\t\t\t\t\t\tcollectionFilter: searchProps.collectionFilter}\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t>\n\t\t\t\t\t\tT\n\t\t\t\t\t</span>\n\n\t\t\t\t\t<span \n\t\t\t\t\t\tclassName='searchFilter tools-btn'\n\t\t\t\t\t\tstyle={searchProps.collectionFilter ? {color:'red'} : {}}\n\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\tsetSearchProps({\n\t\t\t\t\t\t\t\tsearchText: searchProps.searchText, \n\t\t\t\t\t\t\t\tthreadFilter: searchProps.threadFilter, \n\t\t\t\t\t\t\t\tcollectionFilter: !searchProps.collectionFilter}\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t>\n\t\t\t\t\t\tC\n\t\t\t\t\t</span>\n\n\t\t\t\t</div>\n\t\t\t)}\n\n\t\t</Droppable>\n\t);\n};\n\nexport default SearchBar;\n","/*\nAuthor: Nicola Mendini\nDate: 13/09/2021\nThinkyThreads Project\nSearchLabel component\nGives information about the current state of the search\nand the filters applied to it\n*/\n\nimport React from 'react';\nimport { getCaption } from '../helpers/DashboardUtils';\nimport { VscChromeClose } from 'react-icons/vsc';\n\nconst SearchLabel = ({ \n    searchProps, \n    closeCollection, \n    dashboard,\n    darkMode\n}) => {\n\n    return(\n        <div className='stripe-label'>\n\n            <div className='stripe-not-overflow'>\n                NOTE FINDER  \n                {searchProps.threadFilter && ' - THREADS'} \n                {searchProps.collectionFilter && ' - COLLECTIONS'}\n                {\n                    dashboard.openedCollectionId && ' : ' + \n                    getCaption(dashboard.notes.get(dashboard.openedCollectionId))\n                }\n            </div>\n\n            {dashboard.openedCollectionId && \n                <div>\n                    <VscChromeClose \n                        size='2em'\n                        className='tools-btn close-btn'\n                        onClick={() => closeCollection()}\n                        color={darkMode ? 'white' : 'black'}\n                    />\n                </div>\n            }\n\n        </div>\n    )\n}\n\nexport default SearchLabel","/*\nAuthor: Nicola Mendini\nDate: 13/09/2021\nThinkyThreads Project\nNote component\nDefines the single note object and all the actions that are possible with it\n*/\n\nimport { Draggable } from 'react-beautiful-dnd';\nimport React from 'react';\nimport {RiPushpin2Fill} from 'react-icons/ri'\nimport { FaLink, FaFolder } from 'react-icons/fa'\nimport { ImTree } from 'react-icons/im'\nimport { FiPaperclip } from 'react-icons/fi'\n\n// Note component takes the note to show, \n// the name of the area it compares in,\n// the index of the note inside the sequence,\n// handleNotePress to select a note if it is pressed,\n// the darkMode, mergeMode, rootsOrBranches, threadOrCollection flags\n// the selectedNote,\n// the openEditor function to edit the note on double click\nconst Note = ({ \n\tnote, \n\tareaName, \n\tindex, \n\thandleNotePress, \n\tdarkMode, \n\tselectedNote,\n\tmergeMode,\n\topenEditor,\n\trootsOrBranches,\n\tthreadOrCollection\n\n}) => {\n\n\treturn (\n\n\t\t\t<Draggable key={note.ui_id} draggableId={note.ui_id} index={index}>\n\t\t\t\t{(provided, snapshot) => (\n\t\t\t\t\t\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<li \n\t\t\t\t\t\tclassName={`${\n\t\t\t\t\t\t\t(mergeMode && selectedNote.id===note.id && 'note no-scrollbar merge-mode')\n\t\t\t\t\t\t\t||\n\t\t\t\t\t\t\t(((darkMode && selectedNote && selectedNote.id===note.id) && \n\t\t\t\t\t\t\t\t'note note-dark no-scrollbar selected-note-dark') || \n\t\t\t\t\t\t\t((darkMode && (!selectedNote || selectedNote.id!==note.id)) && \n\t\t\t\t\t\t\t\t'note note-dark no-scrollbar') ||\n\t\t\t\t\t\t\t((!darkMode && selectedNote && selectedNote.id===note.id ) &&\n\t\t\t\t\t\t\t\t'note note-bright no-scrollbar selected-note') ||\n\t\t\t\t\t\t\t((!darkMode && (!selectedNote ||selectedNote.id!==note.id)) &&\n\t\t\t\t\t\t\t\t'note note-bright no-scrollbar')) \n\t\t\t\t\t\t}`}\n\t\t\t\t\t\tname={note.id}\n\t\t\t\t\t\tid={note.ui_id}\n\t\t\t\t\t\tref={provided.innerRef} \n\t\t\t\t\t\t{...provided.draggableProps}\n\t\t\t\t\t\t{...provided.dragHandleProps}\n\t\t\t\t\t\tonClick={()=> {handleNotePress(note)}}\n\t\t\t\t\t\tonDoubleClick={()=> areaName!=='branches-area' ? openEditor() : {}}\n\t\t\t\t\t\tstyle={\n\t\t\t\t\t\t\t!(mergeMode && selectedNote.id===note.id) ? (\n\t\t\t\t\t\t\t\t!darkMode && note.color!=='#ffffff' ? \n\t\t\t\t\t\t\t\t\t(selectedNote && selectedNote.id===note.id ? \n\t\t\t\t\t\t\t\t\t\t{backgroundColor: note.color, ...provided.draggableProps.style} : \n\t\t\t\t\t\t\t\t\t{backgroundColor: note.color, border: '1px solid '+note.color, ...provided.draggableProps.style}) : \n\t\t\t\t\t\t\t\t\t\t(note.color!=='#ffffff' ? \n\t\t\t\t\t\t\t\t\t\t\t{backgroundImage: 'linear-gradient(25deg, rgb(92, 92, 92) 92%, '+note.colorPreview+' 92%)', ...provided.draggableProps.style} \n\t\t\t\t\t\t\t\t\t\t\t: provided.draggableProps.style))\n\t\t\t\t\t\t\t: provided.draggableProps.style\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{snapshot.isDropAnimating}\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t{note.pinned && areaName==='search-area' &&\n\t\t\t\t\t\t\t\t\t<RiPushpin2Fill size='10px' className='header-icon'/>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t{note.thread.length ?\n\t\t\t\t\t\t\t\t\t<FaLink size='10px' className='header-icon'/> : ''\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t{note.collection.length ?\n\t\t\t\t\t\t\t\t\t<FaFolder size='10px' className='header-icon'/> : ''\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t{threadOrCollection && !rootsOrBranches && note.branches.length ?\n\t\t\t\t\t\t\t\t\t<ImTree size='10px' className='header-icon'/> : ''\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t{threadOrCollection && rootsOrBranches && note.roots.length ?\n\t\t\t\t\t\t\t\t\t<ImTree size='10px' className='header-icon'/> : ''\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t{note.attachedImg && !note.attachedImg[2] ?\n\t\t\t\t\t\t\t\t\t<FiPaperclip size='10px' className='header-icon' style={{transform:'rotate(-45deg)'}}/> : ''\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{!note.attachedImg || !note.attachedImg[2] ?\n\t\t\t\t\t\t\t\t<div className='note-content no-scrollbar' dangerouslySetInnerHTML={{__html: note.preview}}></div> : \n\t\t\t\t\t\t\t\t<div className='just-background-note' style={{backgroundImage: 'url('+ note.text +')'}}></div>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</Draggable>\n\t);\n};\n\nexport default Note;\n","/*\nAuthor: Nicola Mendini\nDate: 13/09/2021\nThinkyThreads Project\nWrapper component\nUsed to wrap an unsaved thread inside an empty note\nor to expand the thread or collection contained in any\narbitrary note\n*/\n\nimport {Droppable} from 'react-beautiful-dnd';\nimport React from 'react'\n\nconst Wrapper = ({\n\tthreadOrCollection,\n    notesLength,\n    draggableInfo,\n    notes\n}) => {\n\n    // Disable dropping here unless the note comes from the search area\n    // and it is empty if you are trying to wrap an unsaved thread/collection\n    // or it is full if you are trying to expand it to show its content\n    const isDropDisabled = \n        draggableInfo.sourceArea!=='search-area' ||\n        (\n            notesLength>0 ? (\n\n                draggableInfo.note.thread.length>0 || \n                draggableInfo.note.collection.length>0\n            )\n            :\n            (\n                !draggableInfo.note.thread.length && \n                !draggableInfo.note.collection.length \n            )\n            \n        ) ||\n        (notes.find(note => note.id===draggableInfo.note.id)!==undefined)\n    \n    return (\n\n        <Droppable \n            droppableId='wrapper-area'\n            isDropDisabled={isDropDisabled}\n        >\n\n            {(provided, snapshot) => (\n                <div \n                    className='wrapper'\n                    {...provided.droppableProps} \n                    ref={provided.innerRef} \n                    style={ \n                        notesLength > 0 ? (\n                            {\n                            ...(\n                                threadOrCollection ? {backgroundColor:'#fef3bd'} \n                                : {backgroundColor:'#c4def6'}\n                            ), \n                            ...(!snapshot.isDraggingOver && {minWidth:\"2em\"})\n                            })\n                        :\n                        {backgroundColor: '#e7e7e7', minWidth:\"2em\"}\n                    }\n                >\n\n                <div className='vertical-text'>{notesLength>0 ? 'WRAP' : 'Drop to Expand'}</div>\n\n                {provided.placeholder}\n\n                {\n                    snapshot.isDraggingOver?\n                    \n                        (notesLength > 0 ?\n                            (\n                                <div style={{paddingLeft:'15px'}}>\n                                    wrap <br></br> \n                                    {threadOrCollection ? ' thread ' : ' collection '}\n                                    <br></br> \n                                    inside note\n                                </div>\n                            ) \n                        :\n                            (\n                                <div style={{paddingLeft:'15px'}}>\n                                    expand\n                                    <br></br> \n                                    {draggableInfo.note.thread.length ? \n                                        'thread' : 'collection'\n                                    }\n                                </div>\n                            ) \n                        ) : null\n                }\n\n                </div>\n\n            )}\n\n        </Droppable>\n\n    )\n}\nexport default Wrapper","/*\nAuthor: Nicola Mendini\nDate: 13/09/2021\nThinkyThreads Project\nNotesList component\nDefines a general list of notes that acts as a Droppable\nin the framework of React Beautiful Dnd\n*/\n\nimport Note from './Note';\nimport {Droppable} from 'react-beautiful-dnd';\nimport { useState } from 'react';\nimport {FcNext, FcPrevious, FcPlus} from 'react-icons/fc';\nimport Wrapper from './Wrapper';\nimport React from 'react'\n\n// Max size of a row of notes, it is necessary to press the arrow\n// button to access further notes\nconst SLICESIZE = 12;\n\nconst NotesList = ({\n\tnotes,\n\thandleAddNote,\n\tareaName,\n\thandleNotePress,\n\tdarkMode,\n\tselectedNote,\n\tmergeMode,\n\tthreadOrCollection,\n\topenEditor,\n\tworkspaceFlag, \n\trootsOrBranches,\n\tisDropDisabled,\n\tdraggableInfo\n}) => {\n\n\t// State that defines the slice the user is at\n\tconst [currentSlice, setCurrentSlice] = useState(0);\n\n\t// Function used to change slice based on which arrow button has been pressed\n\tconst align = (dir) => {\n\n\t\t// Before changing slice, set up the autoscroll\n\t\t// Initialise a prop based on whether the button was next or prev\n\t\tconst prop = dir===-1 ? {inline:'start'} : {inline:'end'}\n\t\tvar focusPos = currentSlice*SLICESIZE+SLICESIZE-1\n\n\t\t// If overflows, go back to last note of the sequence\n\t\tif(focusPos>notes.length-1){\n\t\t\tfocusPos=notes.length-1\n\t\t}\n\n\t\t// scroll into the last note of the previous slice to give the idea of continuity \n\t\t// between slices\n\t\tdocument.getElementById(notes[focusPos].ui_id).scrollIntoView(prop);\n\t\tsetCurrentSlice(currentSlice+dir)\n\t}\n\n\treturn (\n\n\t\t\t<Droppable \n\t\t\t\tdroppableId={areaName} \n\t\t\t\tdirection='horizontal' \n\t\t\t\tclassName='droppable-wrapper' \n\t\t\t\tisDropDisabled={isDropDisabled}\n\t\t\t>\n\n\t\t\t\t{(provided) => (\n\n\t\t\t\t\t<ul \n\t\t\t\t\t\tclassName='notes-list' \n\t\t\t\t\t\t{...provided.droppableProps} \n\t\t\t\t\t\tref={provided.innerRef} \n\t\t\t\t\t\tid={areaName}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t{currentSlice>0 && \n\t\t\t\t\t\t\t\t\t<FcPrevious \n\t\t\t\t\t\t\t\t\t\tclassName='tools-btn arrow-btn'\n\t\t\t\t\t\t\t\t\t\tonClick={() => align(-1)}\n\t\t\t\t\t\t\t\t\t\tsize='2.5em'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t{(areaName==='workspace-area' && workspaceFlag) &&\n\n\t\t\t\t\t\t\t\t<Wrapper \n\t\t\t\t\t\t\t\t\tthreadOrCollection={threadOrCollection}\n\t\t\t\t\t\t\t\t\tnotesLength={notes.length}\n\t\t\t\t\t\t\t\t\tdraggableInfo={draggableInfo}\n\t\t\t\t\t\t\t\t\tnotes={notes}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t{(areaName==='search-area' && currentSlice===0) && \n\t\t\t\t\t\t\t\t\t<FcPlus \n\t\t\t\t\t\t\t\t\t\tclassName='tools-btn arrow-btn add-btn'\n\t\t\t\t\t\t\t\t\t\tonClick={() => handleAddNote()}\n\t\t\t\t\t\t\t\t\t\tsize='2.5em'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t{notes.slice(currentSlice*SLICESIZE, (currentSlice+1)*SLICESIZE+SLICESIZE).map((note, index) => (\n\n\t\t\t\t\t\t\t\t<Note\n\t\t\t\t\t\t\t\t\tkey={note.ui_id}\n\t\t\t\t\t\t\t\t\tnote={note}\n\t\t\t\t\t\t\t\t\tareaName={areaName}\n\t\t\t\t\t\t\t\t\tindex={index+currentSlice*SLICESIZE}\n\t\t\t\t\t\t\t\t\thandleNotePress={handleNotePress}\n\t\t\t\t\t\t\t\t\tdarkMode={darkMode}\n\t\t\t\t\t\t\t\t\tselectedNote={selectedNote}\n\t\t\t\t\t\t\t\t\tmergeMode={mergeMode}\n\t\t\t\t\t\t\t\t\topenEditor={openEditor}\n\t\t\t\t\t\t\t\t\trootsOrBranches={rootsOrBranches}\n\t\t\t\t\t\t\t\t\tthreadOrCollection={threadOrCollection}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t))}\n\n\t\t\t\t\t\t\t{provided.placeholder}\n\n\t\t\t\t\t\t\t<div> \n\t\t\t\t\t\t\t\t{(currentSlice+1)*SLICESIZE+SLICESIZE<notes.length && \n\t\t\t\t\t\t\t\t\t<FcNext \n\t\t\t\t\t\t\t\t\t\tclassName='tools-btn arrow-btn'\n\t\t\t\t\t\t\t\t\t\tonClick={() => align(1)}\n\t\t\t\t\t\t\t\t\t\tsize='2.5em'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t</ul>\n\t\t\t\t)}\n\n\t\t\t</Droppable>\n\t);\n};\n\nexport default NotesList;\n","/*\nAuthor: Nicola Mendini\nDate: 13/09/2021\nThinkyThreads Project\nSearchArea component\nSearch Area that includes the searchBar, the Search Label\nand the notes list containing the results of the search\n*/\n\nimport React from 'react';\nimport SearchBar from './SearchBar';\nimport SearchLabel from './SearchLabel';\nimport NotesList from './NotesList';\n\nconst SearchArea = ({ \n    closeCollection, \n    dashboard, \n    darkMode, \n    addNote, \n    selectNote, \n    mergeMode, \n    threadOrCollection, \n    openEditor, \n    rootsOrBranches,\n    searchProps,\n    setSearchProps,\n    draggableInfo\n}) => {\n\n    // Dropping here is disabled unless the note comes from the \n    // search area itself and has a collection within it\n    // The gesture is used to expand it\n    const isDropDisabled = \n        draggableInfo.sourceArea!=='search-area' ||\n        !draggableInfo.note.collection.length\n\n    return(\n        <div>\n            <SearchBar \n                setSearchProps={setSearchProps} \n                searchProps={searchProps}\n                isDropDisabled={isDropDisabled}\n            />\n\n            {!threadOrCollection ?\n                <div className='search-spacer'></div> : null\n            }\n\n            <div>\n                <SearchLabel \n                    searchProps={searchProps} \n                    closeCollection={closeCollection}\n                    dashboard={dashboard}\n                    darkMode={darkMode}\n                />\n                \n                <NotesList\n                    notes={dashboard.search}\n                    handleAddNote={addNote}\n                    areaName={'search-area'}\n                    handleNotePress={selectNote}\n                    darkMode={darkMode}\n                    selectedNote={dashboard.notes.get(dashboard.selectedNoteId)}\n                    mergeMode={mergeMode}\n                    threadOrCollection={threadOrCollection}\n                    openEditor={openEditor}\n                    rootsOrBranches={rootsOrBranches}\n                />\n            </div> \n        </div>\n    )\n}\n\nexport default SearchArea","/*\nAuthor: Nicola Mendini\nDate: 13/09/2021\nThinkyThreads Project\nWorkspaceLabel component\nGives information about the current state of the workspace\n*/\n\nimport React from 'react';\nimport { getCaption } from '../helpers/DashboardUtils';\nimport { VscChromeClose } from 'react-icons/vsc';\n\nconst WorkspaceLabel = ({ \n    dashboard,\n    threadOrCollection,\n    closeAndSave,\n    darkMode\n}) => {\n\nreturn(\n    <div className='stripe-label'>\n\n        <div className='stripe-not-overflow'>\n\n            CURRENT {threadOrCollection ? ' THREAD ' : ' COLLECTION '} \n            {dashboard.openedWorkspaceId ?\n                    ' : ' + getCaption(dashboard.notes.get(dashboard.openedWorkspaceId))\n                : (dashboard.workspaceIds.length ? \n                    (threadOrCollection ? ' : unsaved thread ' : ' : unsaved collection ') \n            : null)\n            }\n        </div>\n\n        {dashboard.workspaceIds.length || dashboard.openedWorkspaceId ?\n            <div>\n                <VscChromeClose \n                    size='2em'\n                    className='tools-btn close-btn'\n                    onClick={() => closeAndSave()}\n                    color={darkMode ? 'white' : 'black'}\n                />\n            </div>\n        : null}\n\n    </div>\n    )\n}\n\nexport default WorkspaceLabel","/*\nAuthor: Nicola Mendini\nDate: 13/09/2021\nThinkyThreads Project\nWorkspaceArea component\nContains the current workspace the user is working on\n*/\n\nimport React from 'react';\nimport NotesList from './NotesList';\nimport WorkspaceLabel from './WorkspaceLabel';\n\nconst WorkspaceArea = ({ \n    dashboard, \n    darkMode, \n    selectNote, \n    mergeMode, \n    threadOrCollection, \n    openEditor, \n    rootsOrBranches,\n    closeAndSave,\n    draggableInfo\n}) => { \n\n    return (\n        <div>\n\n            <WorkspaceLabel \n                dashboard={dashboard}\n                threadOrCollection={threadOrCollection}\n                closeAndSave={closeAndSave}\n                darkMode={darkMode}\n            />                \n\n            <NotesList\n                notes={dashboard.workspace}\n                areaName={'workspace-area'}\n                handleNotePress={selectNote}\n                darkMode={darkMode}\n                selectedNote={dashboard.notes.get(dashboard.selectedNoteId)}\n                mergeMode={mergeMode}\n                threadOrCollection={threadOrCollection}\n                openEditor={openEditor}\n                workspaceFlag={!dashboard.openedWorkspaceId}\n                rootsOrBranches={rootsOrBranches}\n                draggableInfo={draggableInfo}\n            />\n\n        </div>\n    )\n}\n\nexport default WorkspaceArea","/*\nAuthor: Nicola Mendini\nDate: 13/09/2021\nThinkyThreads Project\nLinksArea component\nDefines the lowest row of notes of the dashboard\nwhich shows the links starting from/coming into the selectedNote\nBased of a rootsOrBranches flag\n*/\n\nimport React from 'react';\nimport NotesList from './NotesList';\nimport { getCaption } from '../helpers/DashboardUtils';\n\n// LinksArea component,\n// takes the dashboard to get the notes from,\n// The darkmode flag\n// some draggableInfo to know where the drags start from\nconst LinksArea = ({ \n    dashboard, \n    darkMode, \n    mergeMode, \n    threadOrCollection, \n    openEditor, \n    rootsOrBranches,\n    draggableInfo\n}) => { \n\n    const isDropDisabled = \n        draggableInfo.sourceArea!=='search-area' ||\n        draggableInfo.note.id===dashboard.selectedNoteId\n\n    return (\n        <div>\n\n            {dashboard.notes.get(dashboard.selectedNoteId) && threadOrCollection && \n            <div>\n\n                <label className='stripe-label'>\n                    {!rootsOrBranches ? ' BRANCH LINKS - ' : ' ROOT LINKS - '}\n                    {getCaption(dashboard.notes.get(dashboard.selectedNoteId))} \n                </label>\n\n                <NotesList\n                    notes={dashboard.links}\n                    areaName={'branches-area'}\n                    darkMode={darkMode}\n                    handleNotePress={() => {}}\n                    selectedNote={dashboard.notes.get(dashboard.selectedNoteId)}\n                    mergeMode={mergeMode}\n                    threadOrCollection={threadOrCollection}\n                    openEditor={openEditor}\n                    rootsOrBranches={rootsOrBranches}\n                    isDropDisabled={isDropDisabled}\n                />\n\n            </div>      \n            }\n\n        </div>\n    )\n}\n\nexport default LinksArea","/*\nAuthor: Nicola Mendini\nDate: 13/09/2021\nThinkyThreads Project\nNoteDragContext component\nDefines drag and drop context by using the React Beautiful DnD package\n*/\n\nimport React, { useState } from 'react';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport SearchArea from './SearchArea';\nimport WorkspaceArea from './WorkspaceArea';\nimport LinksArea from './LinksArea';\n\n// Function that is called when a drag starts\n// Stores information about the note that has been moved and its\n// original position inside a state that then gets passed\nconst onDragStart = (start, dashboard, setDraggableInfo) => {\n\n    // give some short tactile feedback\n    if (window.navigator.vibrate) {\n        window.navigator.vibrate(25);\n    }\n\n    // Initialise the draggableInfo state\n    const draggableInfo = {}\n    const sourceArea = start.source.droppableId\n    draggableInfo.sourceArea = sourceArea\n    const sourceIndex = start.source.index\n    var noteFound = null\n\n    // return the note itself so that it is possible to access some \n    // of its properties, eg: the collection that it contains\n    // this is used for some special gestures such as the dragging\n    // into the searchBar gesture\n    if(sourceArea==='workspace-area'){\n        noteFound = dashboard.workspace[sourceIndex]\n    }\n    else if(sourceArea==='search-area'){\n        noteFound = dashboard.search[sourceIndex]\n    }\n    else if(sourceArea==='links-area'){\n        noteFound = dashboard.links[sourceIndex]\n    }\n    \n    if(noteFound){\n        draggableInfo.note = noteFound\n    }\n    setDraggableInfo(draggableInfo)\n}\n\nconst NoteDragContext = ({ \n    handleOnDragEnd,\n    closeCollection,\n    dashboard,\n    darkMode,\n    addNote,\n    selectNote,\n    mergeMode,\n    threadOrCollection,\n    openEditor,\n    rootsOrBranches,\n    closeAndSave,\n    searchProps,\n    setSearchProps\n}) => {\n\n    const [draggableInfo, setDraggableInfo] = useState({\n        sourceArea: '',\n        note: null\n    })\n\n    return(\n\n        <DragDropContext \n            onDragEnd={handleOnDragEnd} \n            onDragStart={(start) => onDragStart(start, dashboard, setDraggableInfo)}\n        >\n                \n            <SearchArea \n                closeCollection={closeCollection} \n                dashboard={dashboard} \n                darkMode={darkMode}\n                addNote={addNote}\n                selectNote={selectNote}\n                mergeMode={mergeMode} \n                threadOrCollection={threadOrCollection}\n                openEditor={openEditor}\n                rootsOrBranches={rootsOrBranches}\n                searchProps={searchProps}\n                setSearchProps={setSearchProps}\n                draggableInfo={draggableInfo}\n            />                 \n\n            \n            <WorkspaceArea \n                dashboard={dashboard}\n                darkMode={darkMode}\n                selectNote={selectNote}\n                mergeMode={mergeMode} \n                threadOrCollection={threadOrCollection} \n                openEditor={openEditor} \n                rootsOrBranches={rootsOrBranches}\n                closeAndSave={closeAndSave}\n                draggableInfo={draggableInfo}\n            />\n\n            <LinksArea \n                dashboard={dashboard}\n                darkMode={darkMode}\n                mergeMode={mergeMode}\n                threadOrCollection={threadOrCollection}\n                openEditor={openEditor}\n                rootsOrBranches={rootsOrBranches}\n                draggableInfo={draggableInfo}\n            />\n\n        </DragDropContext>\n    )\n}\nexport default NoteDragContext","/*\nAuthor: Nicola Mendini\nDate: 13/09/2021\nThinkyThreads Project\nNotesPage component\nMain notes page, as opposed to Editor page or settings page\nWraps the noteDragDropContext and the Footer\n*/\n\nimport React from 'react';\nimport Footer from './Footer'\nimport NoteDragContext from './NotesDragContext';\n\nconst NotesPage = ({ \n    darkMode,\n    dashboard,\n    handleOnDragEnd,\n    GAPIloaded,\n    currentUser,\n    setCurrentPage,\n    notesUpdating,\n    setDarkMode,\n    closeCollection,\n    addNote,\n    selectNote,\n    mergeMode,\n    setMergeMode,\n    openEditor,\n    rootsOrBranches,\n    closeAndSave,\n    threadOrCollection,\n    threadOrCollectionManage,\n    setRootsOrBranches,\n    searchProps,\n    setSearchProps,\n    synchNotes\n}) => {\n\n    return(\n\n        <div className={darkMode ? 'container dark-mode' : 'container'}>\n\n            <NoteDragContext \n                handleOnDragEnd={handleOnDragEnd}\n                closeCollection={closeCollection}\n                dashboard={dashboard}\n                darkMode={darkMode}\n                addNote={addNote}\n                selectNote={selectNote}\n                mergeMode={mergeMode}\n                threadOrCollection={threadOrCollection}\n                openEditor={openEditor}\n                rootsOrBranches={rootsOrBranches}\n                closeAndSave={closeAndSave}\n                searchProps={searchProps}\n                setSearchProps={setSearchProps}\n            />\n\n            <Footer \n                threadOrCollectionManage={threadOrCollectionManage}\n                threadOrCollection={threadOrCollection}\n                setRootsOrBranches={setRootsOrBranches}\n                rootsOrBranches={rootsOrBranches}\n                setDarkMode={setDarkMode}\n                mergeMode={mergeMode}\n                setMergeMode={setMergeMode}\n                selectedNote={dashboard.notes.get(dashboard.selectedNoteId)}\n                setCurrentPage={setCurrentPage}\n                notesUpdating={notesUpdating}\n                loadedUser={GAPIloaded && currentUser}\n                synchNotes={synchNotes}\n            />\n            \n        </div>\n    )\n}\nexport default NotesPage"],"sourceRoot":""}